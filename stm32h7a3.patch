diff --git a/.gitattributes b/.gitattributes
index e6d31d6aa..3dd0c3516 100644
--- a/.gitattributes
+++ b/.gitattributes
@@ -12,6 +12,7 @@
 *.jpg binary
 *.dxf binary
 *.mpy binary
+*.pdf binary
 
 # These should also not be modified by git.
 tests/basics/string_cr_conversion.py -text
diff --git a/ports/stm32/Makefile b/ports/stm32/Makefile
index ced851ca3..b4491c965 100644
--- a/ports/stm32/Makefile
+++ b/ports/stm32/Makefile
@@ -72,7 +72,7 @@ CFLAGS_CORTEX_M = -mthumb
 # Select hardware floating-point support
 SUPPORTS_HARDWARE_FP_SINGLE = 0
 SUPPORTS_HARDWARE_FP_DOUBLE = 0
-ifeq ($(CMSIS_MCU),$(filter $(CMSIS_MCU),STM32F765xx STM32F767xx STM32F769xx STM32H743xx))
+ifeq ($(CMSIS_MCU),$(filter $(CMSIS_MCU),STM32F765xx STM32F767xx STM32F769xx STM32H743xx STM32H7A3xx))
 CFLAGS_CORTEX_M += -mfpu=fpv5-d16 -mfloat-abi=hard
 SUPPORTS_HARDWARE_FP_SINGLE = 1
 SUPPORTS_HARDWARE_FP_DOUBLE = 1
@@ -410,7 +410,7 @@ HAL_SRC_C += $(addprefix $(HAL_DIR)/Src/stm32$(MCU_SERIES)xx_,\
 	)
 endif
 
-ifeq ($(CMSIS_MCU),$(filter $(CMSIS_MCU),STM32H743xx))
+ifeq ($(CMSIS_MCU),$(filter $(CMSIS_MCU),STM32H743xx STM32H7A3xx))
     HAL_SRC_C += $(addprefix $(HAL_DIR)/Src/stm32$(MCU_SERIES)xx_, hal_fdcan.c)
 else
 ifeq ($(MCU_SERIES),$(filter $(MCU_SERIES),f0 f4 f7 h7 l4))
diff --git a/ports/stm32/adc.c b/ports/stm32/adc.c
index 3793ef5ff..3967f7f02 100644
--- a/ports/stm32/adc.c
+++ b/ports/stm32/adc.c
@@ -52,7 +52,11 @@
 
 /* ADC defintions */
 
-#if defined(STM32H7)
+#if defined(STM32H7A3xx)
+#define ADCx                    (ADC2)
+#define PIN_ADC_MASK            PIN_ADC2
+#define pin_adc_table           pin_adc2
+#elif defined(STM32H7)
 #define ADCx                    (ADC3)
 #define PIN_ADC_MASK            PIN_ADC3
 #define pin_adc_table           pin_adc3
@@ -142,7 +146,7 @@
     defined(STM32F746xx) || defined(STM32F765xx) || \
     defined(STM32F767xx) || defined(STM32F769xx)
 #define VBAT_DIV (4)
-#elif defined(STM32H743xx)
+#elif defined(STM32H743xx) || defined(STM32H7A3xx)
 #define VBAT_DIV (4)
 #elif defined(STM32L432xx) || \
     defined(STM32L451xx) || defined(STM32L452xx) || \
@@ -232,6 +236,9 @@ STATIC void adc_wait_for_eoc_or_timeout(int32_t timeout) {
 STATIC void adcx_clock_enable(void) {
     #if defined(STM32F0) || defined(STM32F4) || defined(STM32F7)
     ADCx_CLK_ENABLE();
+    #elif defined(STM32H7A3xx)
+    __HAL_RCC_ADC12_CLK_ENABLE();
+    __HAL_RCC_ADC_CONFIG(RCC_ADCCLKSOURCE_CLKP);
     #elif defined(STM32H7)
     __HAL_RCC_ADC3_CLK_ENABLE();
     __HAL_RCC_ADC_CONFIG(RCC_ADCCLKSOURCE_CLKP);
diff --git a/ports/stm32/boards/DEVEBOX_STM32H743/README.md b/ports/stm32/boards/DEVEBOX_STM32H743/README.md
new file mode 100644
index 000000000..c9c7c1f8a
--- /dev/null
+++ b/ports/stm32/boards/DEVEBOX_STM32H743/README.md
@@ -0,0 +1,71 @@
+# DEVEBOX_STM32H743
+
+## Installing bootloader
+
+-   download and unzip firmware
+-   disconnect board from USB
+-   connect pin BOOT0 with pin 3V3
+-   connect board to USB
+-   install bootloader:
+
+        sudo dfu-util -a 0 -d 0x0483:0xDF11 -D mboot/build-DEVEBOX_STM32H743/firmware.dfu
+
+-   disconnect board from USB
+-   remove connection between BOOT0 and 3V3
+-   connect board to USB
+-   run `dfu-util -l`. The device should appear.
+-   from now on, you can boot in DFU mode by pressing button K2 during boot. 
+-   when in mboot bootloader, LED blinks.
+
+## Installing micropython
+
+    sudo dfu-util -a 0 -d 0x0483:0xDF11 -D build-DEVEBOX_STM32H743/firmware.dfu
+
+## DFU
+
+-   you can boot in DFU mode by first connecting BOOT0 and 3V3, then connecting usb.
+
+-   with mboot installed, you can also boot in DFU mode by pressing button K2 during boot. When in mboot bootloader, LED blinks.
+
+-   with mboot and micropython installed, you can also boot in DFU mode by typing `machine.bootloader()` at the micropython prompt.
+
+-   upgrade firmware over usb with `sudo dfu-util -a 0 -D firmware.dfu` or from the source tree with `sudo make -C ports/stm32 BOARD=DEVEBOX_STM32H750 USER_C_MODULES=../../../extmod deploy`
+
+-   as a measure of last resort, you can boot in DFU mode by connecting BOOT0 and 3V3, connecting a usb-to-serial adapter to pins A9 and A10, and uploading firmware over DFU with the command `stm32flash`. You may need to compile `stm32flash` from source to get the latest version.
+
+## SD card
+
+The board does not have a "detect SD card present" pin. Manually write 0 to pyb.Pin.board.SD_SW to force pyb.SDCard().present() True.
+
+    >>> import pyb
+    >>> import os
+    >>> pyb.SDCard().present()
+    False
+    >>> from machine import Pin
+    >>> sd_sw = Pin(pyb.Pin.board.SD_SW, Pin.OUT)
+    >>> sd_sw.value()
+    0
+    >>> pyb.SDCard().present()
+    True
+    >>> sd_sw.value(1)
+    >>> pyb.SDCard().present()
+    False
+    >>> sd_sw.value(0)
+    >>> pyb.SDCard().present()
+    True
+    >>> os.mount(pyb.SDCard(), '/sd')
+    >>> os.listdir('/sd')
+    ['bmp.py']
+
+Put the SD cardâ€™s filesystem in the path list so Python scripts can be imported from the SD card.
+
+    >>> import sys
+    >>> sys.path
+    ['', '/flash', '/flash/lib']
+    >>> sys.path.append('/sd')
+    >>> sys.path.append('/sd/lib')
+    >>> sys.path
+    ['', '/flash', '/flash/lib', '/sd', '/sd/lib']
+
+The stm32h743 full speed usb supports only 2 virtual comm ports. (The stm32h743 has 2 FS USB ports, but only one is broken out to a usb connector)
+
diff --git a/ports/stm32/boards/DEVEBOX_STM32H743/bdev.c b/ports/stm32/boards/DEVEBOX_STM32H743/bdev.c
new file mode 100644
index 000000000..a55e0afdb
--- /dev/null
+++ b/ports/stm32/boards/DEVEBOX_STM32H743/bdev.c
@@ -0,0 +1,44 @@
+/*
+ * This file is part of the MicroPython project, http://micropython.org/
+ *
+ * The MIT License (MIT)
+ *
+ * Copyright (c) 2018-2019 Damien P. George
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ */
+
+#include "storage.h"
+#include "qspi.h"
+
+// Shared cache for SPI block devices
+STATIC mp_spiflash_cache_t spi_bdev_cache;
+
+spi_bdev_t spi_bdev;
+
+// external SPI flash uses hardware QSPI interface
+
+const mp_spiflash_config_t spiflash_config = {
+    .bus_kind = MP_SPIFLASH_BUS_QSPI,
+    .bus.u_qspi.data = NULL,
+    .bus.u_qspi.proto = &qspi_proto,
+    .cache = &spi_bdev_cache,
+};
+
+spi_bdev_t spi_bdev;
diff --git a/ports/stm32/boards/DEVEBOX_STM32H743/cubemx/devebox_stm32h743.ioc b/ports/stm32/boards/DEVEBOX_STM32H743/cubemx/devebox_stm32h743.ioc
new file mode 100644
index 000000000..2c1c1bdd2
--- /dev/null
+++ b/ports/stm32/boards/DEVEBOX_STM32H743/cubemx/devebox_stm32h743.ioc
@@ -0,0 +1,261 @@
+#MicroXplorer Configuration settings - do not modify
+Mcu.Family=STM32H7
+RCC.DIVQ2Freq_Value=120000000
+ProjectManager.MainLocation=Src
+RCC.SAI1Freq_Value=48000000
+RCC.CortexFreq_Value=216000000
+ProjectManager.KeepUserCode=true
+Mcu.UserName=STM32H743VITx
+SPI2.VirtualType=VM_MASTER
+RCC.HPRE=RCC_HCLK_DIV2
+PH0-OSC_IN\ (PH0).Signal=RCC_OSC_IN
+PC12.Locked=true
+PC10.Locked=true
+PC10.Signal=SDMMC1_D2
+PC12.Signal=SDMMC1_CK
+PC15-OSC32_OUT\ (OSC32_OUT).Mode=LSE-External-Oscillator
+PC5.Locked=true
+ProjectManager.functionlistsort=1-MX_GPIO_Init-GPIO-false-HAL-true,2-SystemClock_Config-RCC-false-HAL-false,4-MX_CRC_Init-CRC-false-HAL-true,5-MX_QUADSPI_Init-QUADSPI-false-HAL-true,6-MX_SDMMC1_SD_Init-SDMMC1-false-HAL-true,7-MX_SPI2_Init-SPI2-false-HAL-true,8-MX_USB_OTG_FS_PCD_Init-USB_OTG_FS-false-HAL-true,0-MX_CORTEX_M7_Init-CORTEX_M7-false-HAL-true
+PA11.Mode=Device_Only
+RCC.RTCFreq_Value=32000
+PC9.Locked=true
+PD2.Locked=true
+RCC.CpuClockFreq_Value=216000000
+RCC.VCO2OutputFreq_Value=240000000
+PB15.Signal=SPI2_MOSI
+PB13.Signal=SPI2_SCK
+PinOutPanel.RotationAngle=0
+RCC.MCO1PinFreq_Value=64000000
+RCC.SYSCLKSource=RCC_SYSCLKSOURCE_PLLCLK
+ProjectManager.StackSize=0x400
+RCC.AHB4Freq_Value=108000000
+RCC.VCOInput3Freq_Value=5000000
+RCC.LPTIM1Freq_Value=54000000
+PD13.Signal=QUADSPI_BK1_IO3
+Mcu.IP4=RCC
+Mcu.IP5=SDMMC1
+PD13.Locked=true
+Mcu.IP2=NVIC
+NVIC.SVCall_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+Mcu.IP3=QUADSPI
+Mcu.IP0=CORTEX_M7
+PA12.Locked=true
+Mcu.IP1=CRC
+PA12.Signal=USB_OTG_FS_DP
+SPI2.CLKPolarity=SPI_POLARITY_LOW
+Mcu.UserConstants=
+RCC.DIVP3Freq_Value=48000000
+RCC.SDMMCFreq_Value=48000000
+Mcu.ThirdPartyNb=0
+RCC.HCLKFreq_Value=108000000
+RCC.I2C4Freq_Value=54000000
+PE2.Mode=Single Bank 1
+Mcu.IPNb=9
+ProjectManager.PreviousToolchain=
+PB6.Signal=QUADSPI_BK1_NCS
+RCC.SPDIFRXFreq_Value=48000000
+PB6.Mode=Single Bank 1
+RCC.DIVQ3Freq_Value=48000000
+Mcu.Pin6=PA1
+Mcu.Pin7=PC5
+Mcu.Pin8=PB0
+Mcu.Pin9=PB1
+SPI2.BaudRatePrescaler=SPI_BAUDRATEPRESCALER_32
+PB13.Locked=true
+Mcu.Pin0=PE2
+Mcu.Pin1=PE3
+GPIO.groupedBy=
+Mcu.Pin2=PC14-OSC32_IN (OSC32_IN)
+RCC.HRTIMFreq_Value=108000000
+Mcu.Pin3=PC15-OSC32_OUT (OSC32_OUT)
+Mcu.Pin4=PH0-OSC_IN (PH0)
+Mcu.Pin5=PH1-OSC_OUT (PH1)
+ProjectManager.ProjectBuild=false
+PH1-OSC_OUT\ (PH1).Mode=HSE-External-Oscillator
+RCC.DIVR3Freq_Value=120000000
+RCC.HSE_VALUE=25000000
+NVIC.UsageFault_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+NVIC.DebugMonitor_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+PB2.Signal=QUADSPI_CLK
+RCC.DIVM3=5
+RCC.DIVM2=5
+NVIC.SysTick_IRQn=true\:0\:0\:false\:false\:true\:false\:true
+RCC.DIVM1=25
+ProjectManager.FirmwarePackage=STM32Cube FW_H7 V1.7.0
+MxDb.Version=DB.5.0.60
+RCC.DIVP1Freq_Value=216000000
+ProjectManager.BackupPrevious=false
+RCC.FMCFreq_Value=108000000
+PB14.Mode=Full_Duplex_Master
+RCC.USART16Freq_Value=54000000
+File.Version=6
+PC9.Mode=SD_4_bits_Wide_bus
+SPI2.CalculateBaudRate=1.5 MBits/s
+PE2.Signal=QUADSPI_BK1_IO2
+PE3.Locked=true
+PB6.Locked=true
+NVIC.PendSV_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+RCC.DIVR2Freq_Value=48000000
+ProjectManager.HalAssertFull=false
+PB0.Locked=true
+RCC.DIVP2Freq_Value=48000000
+ProjectManager.ProjectName=devebox_stm32h743
+RCC.APB3Freq_Value=54000000
+RCC.MCO2PinFreq_Value=216000000
+Mcu.Package=LQFP100
+PB1.Signal=GPIO_Output
+SPI2.Mode=SPI_MODE_MASTER
+PD11.Locked=true
+RCC.D1PPRE=RCC_APB3_DIV2
+PD12.Signal=QUADSPI_BK1_IO1
+ProjectManager.ToolChainLocation=
+VP_SYS_VS_Systick.Signal=SYS_VS_Systick
+USB_OTG_FS.VirtualMode=Device_Only
+RCC.DFSDMFreq_Value=54000000
+RCC.DIVR1Freq_Value=216000000
+PC11.Mode=SD_4_bits_Wide_bus
+PC14-OSC32_IN\ (OSC32_IN).Mode=LSE-External-Oscillator
+RCC.TraceFreq_Value=64000000
+RCC.APB4Freq_Value=54000000
+RCC.CECFreq_Value=32000
+RCC.SAI23Freq_Value=48000000
+NVIC.BusFault_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+RCC.LPUART1Freq_Value=54000000
+SPI2.Direction=SPI_DIRECTION_2LINES
+PC5.Signal=GPIO_Input
+USB_OTG_FS.IPParameters=VirtualMode
+PB13.Mode=Full_Duplex_Master
+PH0-OSC_IN\ (PH0).Mode=HSE-External-Oscillator
+ProjectManager.CustomerFirmwarePackage=
+RCC.Tim2OutputFreq_Value=108000000
+RCC.DFSDMACLkFreq_Value=48000000
+PB15.Locked=true
+RCC.VCO3OutputFreq_Value=240000000
+RCC.PLLSourceVirtual=RCC_PLLSOURCE_HSE
+ProjectManager.ProjectFileName=devebox_stm32h743.ioc
+RCC.DIVQ3=5
+RCC.DIVQ1=9
+Mcu.PinsNb=29
+ProjectManager.NoMain=false
+PC11.Locked=true
+PC11.Signal=SDMMC1_D3
+RCC.SWPMI1Freq_Value=54000000
+RCC.DIVP3=5
+RCC.SAI4BFreq_Value=48000000
+PC8.Signal=SDMMC1_D0
+PC10.Mode=SD_4_bits_Wide_bus
+RCC.D2PPRE2=RCC_APB2_DIV2
+RCC.D2PPRE1=RCC_APB1_DIV2
+ProjectManager.DefaultFWLocation=true
+RCC.DIVP2=5
+PB12.Locked=true
+ProjectManager.DeletePrevious=true
+PB14.Locked=true
+RCC.QSPIFreq_Value=108000000
+RCC.FamilyName=M
+PH1-OSC_OUT\ (PH1).Signal=RCC_OSC_OUT
+PD12.Locked=true
+RCC.SPI6Freq_Value=54000000
+RCC.D1CPREFreq_Value=216000000
+RCC.USART234578Freq_Value=54000000
+PA11.Locked=true
+RCC.SPI45Freq_Value=54000000
+RCC.Tim1OutputFreq_Value=108000000
+RCC.SPI123Freq_Value=48000000
+ProjectManager.TargetToolchain=EWARM V8.32
+PC15-OSC32_OUT\ (OSC32_OUT).Signal=RCC_OSC32_OUT
+RCC.VCO1OutputFreq_Value=432000000
+VP_CRC_VS_CRC.Signal=CRC_VS_CRC
+RCC.DIVN3=48
+RCC.AXIClockFreq_Value=108000000
+RCC.DIVN2=48
+PD13.Mode=Single Bank 1
+RCC.DIVN1=432
+SPI2.IPParameters=VirtualType,Mode,Direction,BaudRatePrescaler,CalculateBaudRate,CLKPolarity
+RCC.USBFreq_Value=48000000
+PA1.Signal=GPIO_Output
+RCC.CKPERFreq_Value=64000000
+PB1.Locked=true
+PB14.Signal=SPI2_MISO
+PD2.Mode=SD_4_bits_Wide_bus
+PC12.Mode=SD_4_bits_Wide_bus
+board=custom
+ProjectManager.LastFirmware=true
+PB15.Mode=Full_Duplex_Master
+RCC.VCOInput1Freq_Value=1000000
+RCC.AHB12Freq_Value=108000000
+RCC.APB2Freq_Value=54000000
+MxCube.Version=5.6.1
+RCC.FDCANFreq_Value=48000000
+RCC.RNGFreq_Value=48000000
+RCC.ADCFreq_Value=48000000
+VP_SYS_VS_Systick.Mode=SysTick
+NVIC.NonMaskableInt_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+ProjectManager.FreePins=false
+RCC.IPParameters=ADCFreq_Value,AHB12Freq_Value,AHB4Freq_Value,APB1Freq_Value,APB2Freq_Value,APB3Freq_Value,APB4Freq_Value,AXIClockFreq_Value,CECFreq_Value,CKPERFreq_Value,CortexFreq_Value,CpuClockFreq_Value,D1CPREFreq_Value,D1PPRE,D2PPRE1,D2PPRE2,D3PPRE,DFSDMACLkFreq_Value,DFSDMFreq_Value,DIVM1,DIVM2,DIVM3,DIVN1,DIVN2,DIVN3,DIVP1Freq_Value,DIVP2,DIVP2Freq_Value,DIVP3,DIVP3Freq_Value,DIVQ1,DIVQ1Freq_Value,DIVQ2Freq_Value,DIVQ3,DIVQ3Freq_Value,DIVR1Freq_Value,DIVR2,DIVR2Freq_Value,DIVR3Freq_Value,FDCANFreq_Value,FMCFreq_Value,FamilyName,HCLK3ClockFreq_Value,HCLKFreq_Value,HPRE,HRTIMFreq_Value,HSE_VALUE,I2C123Freq_Value,I2C4Freq_Value,LPTIM1Freq_Value,LPTIM2Freq_Value,LPTIM345Freq_Value,LPUART1Freq_Value,LTDCFreq_Value,MCO1PinFreq_Value,MCO2PinFreq_Value,PLLSourceVirtual,QSPIFreq_Value,RNGFreq_Value,RTCFreq_Value,SAI1Freq_Value,SAI23Freq_Value,SAI4AFreq_Value,SAI4BFreq_Value,SDMMCFreq_Value,SPDIFRXFreq_Value,SPI123Freq_Value,SPI45Freq_Value,SPI6Freq_Value,SWPMI1Freq_Value,SYSCLKFreq_VALUE,SYSCLKSource,Tim1OutputFreq_Value,Tim2OutputFreq_Value,TraceFreq_Value,USART16Freq_Value,USART234578Freq_Value,USBFreq_Value,VCO1OutputFreq_Value,VCO2OutputFreq_Value,VCO3OutputFreq_Value,VCOInput1Freq_Value,VCOInput2Freq_Value,VCOInput3Freq_Value
+ProjectManager.AskForMigrate=true
+Mcu.Name=STM32H743VITx
+RCC.LPTIM2Freq_Value=54000000
+Mcu.Pin26=PB6
+Mcu.Pin27=VP_CRC_VS_CRC
+Mcu.Pin24=PC12
+ProjectManager.UnderRoot=false
+Mcu.Pin25=PD2
+PB2.Locked=true
+Mcu.IP8=USB_OTG_FS
+Mcu.Pin28=VP_SYS_VS_Systick
+Mcu.IP6=SPI2
+PC8.Mode=SD_4_bits_Wide_bus
+Mcu.IP7=SYS
+ProjectManager.CoupleFile=false
+RCC.SYSCLKFreq_VALUE=216000000
+Mcu.Pin22=PC10
+RCC.I2C123Freq_Value=54000000
+Mcu.Pin23=PC11
+PA1.Locked=true
+Mcu.Pin20=PA11
+PD12.Mode=Single Bank 1
+Mcu.Pin21=PA12
+PA12.Mode=Device_Only
+NVIC.ForceEnableDMAVector=true
+KeepUserPlacement=false
+PC14-OSC32_IN\ (OSC32_IN).Signal=RCC_OSC32_IN
+PD11.Signal=QUADSPI_BK1_IO0
+NVIC.MemoryManagement_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+PB2.Mode=Single Bank 1
+ProjectManager.CompilerOptimize=6
+PA11.Signal=USB_OTG_FS_DM
+ProjectManager.HeapSize=0x200
+Mcu.Pin15=PD11
+NVIC.HardFault_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+Mcu.Pin16=PD12
+Mcu.Pin13=PB14
+PD11.Mode=Single Bank 1
+Mcu.Pin14=PB15
+Mcu.Pin19=PC9
+RCC.LPTIM345Freq_Value=54000000
+ProjectManager.ComputerToolchain=false
+Mcu.Pin17=PD13
+Mcu.Pin18=PC8
+RCC.LTDCFreq_Value=120000000
+RCC.SAI4AFreq_Value=48000000
+NVIC.PriorityGroup=NVIC_PRIORITYGROUP_4
+Mcu.Pin11=PB12
+Mcu.Pin12=PB13
+Mcu.Pin10=PB2
+RCC.DIVQ1Freq_Value=48000000
+PE3.Signal=GPIO_Input
+PE2.Locked=true
+RCC.D3PPRE=RCC_APB4_DIV2
+PC8.Locked=true
+PC9.Signal=SDMMC1_D1
+PD2.Signal=SDMMC1_CMD
+RCC.HCLK3ClockFreq_Value=108000000
+RCC.VCOInput2Freq_Value=5000000
+RCC.APB1Freq_Value=54000000
+RCC.DIVR2=5
+VP_CRC_VS_CRC.Mode=CRC_Activate
+PB0.Signal=GPIO_Output
+ProjectManager.DeviceId=STM32H743VITx
+PB12.Signal=GPIO_Output
+ProjectManager.LibraryCopy=0
diff --git a/ports/stm32/boards/DEVEBOX_STM32H743/docs/STM32H7XX_M.jpg b/ports/stm32/boards/DEVEBOX_STM32H743/docs/STM32H7XX_M.jpg
new file mode 100644
index 000000000..9a9feccff
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H743/docs/STM32H7XX_M.jpg differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H743/docs/STM32H7XX_M_camera.jpg b/ports/stm32/boards/DEVEBOX_STM32H743/docs/STM32H7XX_M_camera.jpg
new file mode 100644
index 000000000..05789e289
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H743/docs/STM32H7XX_M_camera.jpg differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H743/docs/STM32H7XX_M_display.jpg b/ports/stm32/boards/DEVEBOX_STM32H743/docs/STM32H7XX_M_display.jpg
new file mode 100644
index 000000000..f3bdac37d
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H743/docs/STM32H7XX_M_display.jpg differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H743/docs/STM32H7XX_M_schematics.pdf b/ports/stm32/boards/DEVEBOX_STM32H743/docs/STM32H7XX_M_schematics.pdf
new file mode 100644
index 000000000..1f83baf10
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H743/docs/STM32H7XX_M_schematics.pdf differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H743/mpconfigboard.h b/ports/stm32/boards/DEVEBOX_STM32H743/mpconfigboard.h
new file mode 100644
index 000000000..c3fc23819
--- /dev/null
+++ b/ports/stm32/boards/DEVEBOX_STM32H743/mpconfigboard.h
@@ -0,0 +1,149 @@
+#define MICROPY_HW_BOARD_NAME       "DEVEBOX STM32H7XX"
+#define MICROPY_HW_MCU_NAME         "STM32H743"
+
+
+#define MICROPY_PY_PYB_LEGACY       (0)
+#define MICROPY_HW_ENABLE_INTERNAL_FLASH_STORAGE (0)
+#define MICROPY_HW_HAS_SWITCH       (1)
+#define MICROPY_HW_HAS_FLASH        (1)
+#define MICROPY_HW_ENABLE_RNG       (1)
+#define MICROPY_HW_ENABLE_RTC       (1)
+#define MICROPY_HW_ENABLE_TIMER     (1)
+#define MICROPY_HW_ENABLE_SERVO     (0)
+#define MICROPY_HW_ENABLE_DAC       (1)
+#define MICROPY_HW_ENABLE_USB       (1)
+#define MICROPY_HW_ENABLE_SDCARD    (1)
+#define MICROPY_HW_ENABLE_MMCARD    (0)
+
+
+// Settings for 216 MHz cpu clock.
+// Values from stm32cubemx clock configuration.
+// HSE external crystal is 25 MHz.
+
+#define MICROPY_HW_CLK_PLLM (25)
+#define MICROPY_HW_CLK_PLLN (432)
+#define MICROPY_HW_CLK_PLLP (2)
+#define MICROPY_HW_CLK_PLLQ (9)
+#define MICROPY_HW_CLK_PLLR (2)
+
+// Settings for USB clock.
+// Values from stm32cubemx clock configuration.
+// HSE external crystal is 25 MHz.
+#define MICROPY_HW_CLK_PLL3M (5)
+#define MICROPY_HW_CLK_PLL3N (48)
+#define MICROPY_HW_CLK_PLL3P (5)
+#define MICROPY_HW_CLK_PLL3Q (5)
+#define MICROPY_HW_CLK_PLL3R (2)
+
+// AXI bus at 108 MHz, 1 wait state.
+// From cubemx -> Pinout & Configuration -> System Core -> RCC -> Parameter Settings -> System Parameters -> Flash Latency
+// See RM0433 Reference Manual, Table 17 "FLASH recommended number of wait states and programming delay."
+#define MICROPY_HW_FLASH_LATENCY    FLASH_LATENCY_1
+
+// RTC
+// LSE external crystal is 32768 Hz.
+#define MICROPY_HW_RTC_USE_LSE      (1)
+#define MICROPY_HW_RTC_USE_US       (0)
+
+// USB config
+#define MICROPY_HW_USB_FS (1)
+//#define MICROPY_HW_USB_HS           (1)
+//#define MICROPY_HW_USB_HS_IN_FS     (1)
+//#define MICROPY_HW_USB_MAIN_DEV     (USB_PHY_FS_ID)
+#define MICROPY_HW_USB_CDC_NUM      (2)
+#define MICROPY_HW_USB_MSC          (0)
+
+// pushbutton
+#define MICROPY_HW_USRSW_PIN        (pyb_pin_USRSW1)
+#define MICROPY_HW_USRSW_PULL       (GPIO_PULLUP)
+#define MICROPY_HW_USRSW_EXTI_MODE  (GPIO_MODE_IT_FALLING)
+#define MICROPY_HW_USRSW_PRESSED    (0)
+
+// Winbond W25Q64 64Mbit external QSPI flash
+#define MICROPY_HW_QSPIFLASH_SIZE_BITS_LOG2 (26)
+#define MICROPY_HW_QSPIFLASH_CS     (pyb_pin_QSPI_BK1_NCS)
+#define MICROPY_HW_QSPIFLASH_SCK    (pyb_pin_QSPI_CLK)
+#define MICROPY_HW_QSPIFLASH_IO0    (pyb_pin_QSPI_BK1_IO0)
+#define MICROPY_HW_QSPIFLASH_IO1    (pyb_pin_QSPI_BK1_IO1)
+#define MICROPY_HW_QSPIFLASH_IO2    (pyb_pin_QSPI_BK1_IO2)
+#define MICROPY_HW_QSPIFLASH_IO3    (pyb_pin_QSPI_BK1_IO3)
+
+// SPI flash, block device config (for use as filesystem)
+extern const struct _mp_spiflash_config_t spiflash_config;
+extern struct _spi_bdev_t spi_bdev;
+#define MICROPY_HW_ENABLE_INTERNAL_FLASH_STORAGE (0)
+#define MICROPY_HW_BDEV_IOCTL(op, arg) ( \
+    (op) == BDEV_IOCTL_NUM_BLOCKS ? ((1 << MICROPY_HW_QSPIFLASH_SIZE_BITS_LOG2) / 8 / FLASH_BLOCK_SIZE) : \
+    (op) == BDEV_IOCTL_INIT ? spi_bdev_ioctl(&spi_bdev, (op), (uint32_t)&spiflash_config) : \
+    spi_bdev_ioctl(&spi_bdev, (op), (arg)) \
+)
+#define MICROPY_HW_BDEV_READBLOCKS(dest, bl, n) spi_bdev_readblocks(&spi_bdev, (dest), (bl), (n))
+#define MICROPY_HW_BDEV_WRITEBLOCKS(src, bl, n) spi_bdev_writeblocks(&spi_bdev, (src), (bl), (n))
+#define MICROPY_HW_BDEV_SPIFLASH_EXTENDED (&spi_bdev) // for extended block protocol
+#define MICROPY_HW_FLASH_FS_LABEL   "BMP"
+
+// TFT/OLED display connector
+// used to connect target
+
+#define MICROPY_HW_SPI2_SCK                 (pin_B13)
+#define MICROPY_HW_SPI2_MISO                (pin_B14)
+#define MICROPY_HW_SPI2_MOSI                (pin_B15)
+#define MICROPY_HW_SPI2_CS                  (pin_B12)
+
+// DCMI connector for OV2640-200/OV5640-500 camera.
+
+// SD card. Detect switch missing.
+#define MICROPY_HW_SDMMC_D0                 (pyb_pin_SD_D0)
+#define MICROPY_HW_SDMMC_D1                 (pyb_pin_SD_D1)
+#define MICROPY_HW_SDMMC_D2                 (pyb_pin_SD_D2)
+#define MICROPY_HW_SDMMC_D3                 (pyb_pin_SD_D3)
+#define MICROPY_HW_SDMMC_CK                 (pyb_pin_SD_CK)
+#define MICROPY_HW_SDMMC_CMD                (pyb_pin_SD_CMD)
+#define MICROPY_HW_SDCARD_DETECT_PIN        (pyb_pin_SD_SW) // XXX dummy, no switch at this pin
+#define MICROPY_HW_SDCARD_DETECT_PULL       (GPIO_PULLUP)
+#define MICROPY_HW_SDCARD_DETECT_PRESENT    (GPIO_PIN_RESET)
+#define MICROPY_HW_SDCARD_MOUNT_AT_BOOT     (0)
+
+// UART
+#define MICROPY_HW_UART2_TX     (pin_A3)
+#define MICROPY_HW_UART2_RX     (pin_A2)
+
+#define MICROPY_HW_UART7_TX     (pin_E8)
+#define MICROPY_HW_UART7_RX     (pin_E7)
+
+// I2C
+#define MICROPY_HW_I2C1_SCL     (pin_B8)
+#define MICROPY_HW_I2C1_SDA     (pin_B9)
+
+#define MICROPY_HW_I2C2_SCL     (pin_B10)
+#define MICROPY_HW_I2C2_SDA     (pin_B11)
+
+// SPI
+#define MICROPY_HW_SPI1_SCK     (pin_A5)
+#define MICROPY_HW_SPI1_MISO    (pin_A6)
+#define MICROPY_HW_SPI1_MOSI    (pin_A7)
+#define MICROPY_HW_SPI1_CS      (pin_A4)
+
+// CAN
+#define MICROPY_HW_CAN1_TX      (pin_B9)
+#define MICROPY_HW_CAN1_RX      (pin_B8)
+
+/******************************************************************************/
+// Bootloader configuration
+
+//#define MBOOT_USB_AUTODETECT_PORT   (0)
+#define MBOOT_FSLOAD                (0)
+
+// configure pin to force entry into the boot loader
+#define MBOOT_BOOTPIN_PIN           (pyb_pin_USRSW2)
+#define MBOOT_BOOTPIN_PULL          (MP_HAL_PIN_PULL_UP)
+#define MBOOT_BOOTPIN_ACTIVE        (0)
+
+// definitions below only to allow compilation of bootloader
+#define MICROPY_HW_LED_INVERTED     (1) // LEDs are on when pin is driven low
+#define MICROPY_HW_LED1             (pyb_pin_LED)
+#define MICROPY_HW_LED2             (pyb_pin_PD9) // pin has no led, but LED2 has to be defined to compile bootloader XXX
+#define MICROPY_HW_LED_ON(pin)      (mp_hal_pin_low(pin))
+#define MICROPY_HW_LED_OFF(pin)     (mp_hal_pin_high(pin))
+
+// not truncated
diff --git a/ports/stm32/boards/DEVEBOX_STM32H743/mpconfigboard.mk b/ports/stm32/boards/DEVEBOX_STM32H743/mpconfigboard.mk
new file mode 100644
index 000000000..20fa5a4cf
--- /dev/null
+++ b/ports/stm32/boards/DEVEBOX_STM32H743/mpconfigboard.mk
@@ -0,0 +1,20 @@
+# MCU settings
+MCU_SERIES = h7
+MCU_ARCH = stm32
+CMSIS_MCU = STM32H743xx
+MICROPY_FLOAT_IMPL = single
+AF_FILE = boards/stm32h743_af.csv
+LD_FILES = boards/stm32h743.ld boards/common_blifs.ld
+TEXT0_ADDR = 0x08040000
+
+# MicroPython settings
+MICROPY_PY_BLUETOOTH = 0
+MICROPY_BLUETOOTH_NIMBLE = 0
+MICROPY_BLUETOOTH_BTSTACK = 0
+MICROPY_PY_LWIP = 0
+MICROPY_PY_NETWORK_CYW43 = 0
+MICROPY_PY_USSL = 0
+MICROPY_SSL_MBEDTLS = 0
+MICROPY_VFS_LFS2 = 1
+
+#not truncated
diff --git a/ports/stm32/boards/DEVEBOX_STM32H743/pins.csv b/ports/stm32/boards/DEVEBOX_STM32H743/pins.csv
new file mode 100644
index 000000000..71eafa3b6
--- /dev/null
+++ b/ports/stm32/boards/DEVEBOX_STM32H743/pins.csv
@@ -0,0 +1,143 @@
+PA0,PA0
+PA1,PA1
+PA2,PA2
+PA3,PA3
+PA4,PA4
+PA5,PA5
+PA6,PA6
+PA7,PA7
+PA8,PA8
+PA9,PA9
+PA10,PA10
+PA11,PA11
+PA12,PA12
+PA13,PA13
+PA14,PA14
+PA15,PA15
+PB0,PB0
+PB1,PB1
+PB2,PB2
+PB3,PB3
+PB4,PB4
+PB5,PB5
+PB6,PB6
+PB7,PB7
+PB8,PB8
+PB9,PB9
+PB10,PB10
+PB11,PB11
+PB12,PB12
+PB13,PB13
+PB14,PB14
+PB15,PB15
+PC0,PC0
+PC1,PC1
+PC2,PC2
+PC3,PC3
+PC4,PC4
+PC5,PC5
+PC6,PC6
+PC7,PC7
+PC8,PC8
+PC9,PC9
+PC10,PC10
+PC11,PC11
+PC12,PC12
+PC13,PC13
+PC14,PC14
+PC15,PC15
+PD0,PD0
+PD1,PD1
+PD2,PD2
+PD3,PD3
+PD4,PD4
+PD5,PD5
+PD6,PD6
+PD7,PD7
+PD8,PD8
+PD9,PD9
+PD10,PD10
+PD11,PD11
+PD12,PD12
+PD13,PD13
+PD14,PD14
+PD15,PD15
+PE0,PE0
+PE1,PE1
+PE2,PE2
+PE3,PE3
+PE4,PE4
+PE5,PE5
+PE6,PE6
+PE7,PE7
+PE8,PE8
+PE9,PE9
+PE10,PE10
+PE11,PE11
+PE12,PE12
+PE13,PE13
+PE14,PE14
+PE15,PE15
+PF0,PF0
+PF1,PF1
+PF2,PF2
+PF3,PF3
+PF4,PF4
+PF5,PF5
+PF6,PF6
+PF7,PF7
+PF8,PF8
+PF9,PF9
+PF10,PF10
+PF11,PF11
+PF12,PF12
+PF13,PF13
+PF14,PF14
+PF15,PF15
+LED,PA1
+USB_DM,PA11
+USB_DP,PA12
+OSC32_IN,PC14
+OSC32_OUT,PC15
+TFT_SDI,PB15
+TFT_SCL,PB13
+TFT_CS,PB12
+TFT_SDO,PB14
+TFT_DC,PB1
+TFT_BLK,PB0
+SD_D0,PC8
+SD_D1,PC9
+SD_D2,PC10
+SD_D3,PC11
+SD_CK,PC12
+SD_CMD,PD2
+SD_SW,PD8
+DCMI_SDA,PB11
+DCMI_SCL,PB10
+DCMI_RESET,PC4
+DCMI_CH1,PA5
+DCMI_PWDN,PA7
+DCMI_HREF,PA4
+DCMI_VSYNC,PB7
+DCMI_D0,PC6
+DCMI_D1,PC7
+DCMI_D2,PE0
+DCMI_D3,PE1
+DCMI_D4,PE4
+DCMI_D5,PD3
+DCMI_D6,PE5
+DCMI_D7,PE6
+DCMI_PCLK,PA6
+DCMI_XCLK,PA8
+QSPI_BK1_NCS,PB6
+QSPI_CLK,PB2
+QSPI_BK1_IO0,PD11
+QSPI_BK1_IO1,PD12
+QSPI_BK1_IO2,PE2
+QSPI_BK1_IO3,PD13
+USRSW1,PE3
+USRSW2,PC5
+UART7_RX,PE7
+UART7_TX,PE8
+USART2_RX,PA3
+USART2_TX,PA2
diff --git a/ports/stm32/boards/DEVEBOX_STM32H743/stm32h7xx_hal_conf.h b/ports/stm32/boards/DEVEBOX_STM32H743/stm32h7xx_hal_conf.h
new file mode 100644
index 000000000..47f6135f8
--- /dev/null
+++ b/ports/stm32/boards/DEVEBOX_STM32H743/stm32h7xx_hal_conf.h
@@ -0,0 +1,15 @@
+#ifndef MICROPY_INCLUDED_STM32H7XX_HAL_CONF_H
+#define MICROPY_INCLUDED_STM32H7XX_HAL_CONF_H
+
+#include "boards/stm32h7xx_hal_conf_base.h"
+
+// Oscillator values in Hz
+#define HSE_VALUE (25000000)
+#define LSE_VALUE (32768)
+#define EXTERNAL_CLOCK_VALUE (12288000)
+
+// Oscillator timeouts in ms
+#define HSE_STARTUP_TIMEOUT (5000)
+#define LSE_STARTUP_TIMEOUT (5000)
+
+#endif // MICROPY_INCLUDED_STM32H7XX_HAL_CONF_H
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/README.md b/ports/stm32/boards/DEVEBOX_STM32H7A3/README.md
new file mode 100644
index 000000000..3dc713ad1
--- /dev/null
+++ b/ports/stm32/boards/DEVEBOX_STM32H7A3/README.md
@@ -0,0 +1,8 @@
+# DEVEBOX STM32H7A3
+
+These are notes about the micropython sources for stm32h7a3.
+
+## stm32cubemx
+
+The cubemx/ subdirectory contains a stm32cubemx project, used to configure the clock tree.
+
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/cubemx/cubemx.ioc b/ports/stm32/boards/DEVEBOX_STM32H7A3/cubemx/cubemx.ioc
new file mode 100644
index 000000000..85dac6503
--- /dev/null
+++ b/ports/stm32/boards/DEVEBOX_STM32H7A3/cubemx/cubemx.ioc
@@ -0,0 +1,404 @@
+#MicroXplorer Configuration settings - do not modify
+PD7.Mode=Full_Duplex_Master
+PH0-OSC_IN.Signal=RCC_OSC_IN
+SPI4.VirtualType=VM_MASTER
+SPI1.VirtualType=VM_MASTER
+SPI2.VirtualType=VM_MASTER
+PB10.Mode=I2C
+PC12.Signal=SDMMC1_CK
+RCC.PLLFRACN=0
+VP_RTC_VS_RTC_Activate.Mode=RTC_Enabled
+RCC.RTCFreq_Value=32000
+RCC.CpuClockFreq_Value=280000000
+USART1.IPParameters=VirtualMode-Asynchronous
+PB13.Signal=SPI2_SCK
+PinOutPanel.RotationAngle=0
+RCC.MCO1PinFreq_Value=64000000
+RCC.SYSCLKSource=RCC_SYSCLKSOURCE_PLLCLK
+RCC.AHB4Freq_Value=280000000
+RCC.LPTIM1Freq_Value=140000000
+RCC.SAI2BFreq_Value=140000000
+NVIC.SVCall_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+PA4.Mode=Slave_8_bits_External_Synchro
+SPI1.Direction=SPI_DIRECTION_2LINES
+RCC.I2C4Freq_Value=140000000
+PE2.Mode=OCTOSPI1_IOL_Port1L
+PC7.Signal=DCMI_D1
+RCC.DIVQ3Freq_Value=48000000
+SPI1.CalculateBaudRate=70.0 MBits/s
+PE5.Signal=DCMI_D6
+PE1.Signal=DCMI_D3
+PB13.Locked=true
+PE14.Locked=true
+ProjectManager.ProjectBuild=false
+NVIC.UsageFault_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+PB2.Signal=OCTOSPIM_P1_CLK
+PB3.Mode=Full_Duplex_Master
+PA8.Locked=true
+RCC.DIVM3=5
+VP_OCTOSPI1_VS_quad.Mode=quad_mode
+RCC.DIVM2=5
+RCC.DIVM1=5
+VP_ADC2_Vref_Input.Signal=ADC2_Vref_Input
+DCMI.PCKPolarity=DCMI_PCKPOLARITY_RISING
+RCC.DFSDM2Freq_Value=140000000
+ProjectManager.FirmwarePackage=STM32Cube FW_H7 V1.8.0
+MxDb.Version=DB.6.0.10
+ProjectManager.BackupPrevious=false
+RCC.FMCFreq_Value=280000000
+RCC.DFSDM2ACLkFreq_Value=140000000
+PB14.Mode=Full_Duplex_Master
+OCTOSPI1.SampleShifting=HAL_OSPI_SAMPLE_SHIFTING_HALFCYCLE
+RCC.USART16Freq_Value=140000000
+PC9.Mode=SD_4_bits_Wide_bus
+SPI2.CalculateBaudRate=70.0 MBits/s
+PE2.Signal=OCTOSPIM_P1_IO2
+PA8.Signal=GPIO_Output
+NVIC.PendSV_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+USB_OTG_HS.IPParameters=VirtualMode
+PD3.Mode=Slave_8_bits_External_Synchro
+RCC.DIVR2Freq_Value=84000000
+ProjectManager.HalAssertFull=false
+VP_TIM1_VS_ClockSourceINT.Mode=Internal
+RCC.DIVP2Freq_Value=84000000
+RCC.MCO2PinFreq_Value=280000000
+Mcu.Package=LQFP100
+PB9.Signal=I2C1_SDA
+PB1.Signal=GPIO_Output
+PA5.Locked=true
+SPI2.Mode=SPI_MODE_MASTER
+RCC.PLL3FRACN=0
+PD11.Locked=true
+PD12.Signal=OCTOSPIM_P1_IO1
+PA14.Locked=true
+VP_SYS_VS_Systick.Signal=SYS_VS_Systick
+PA10.Signal=USART1_RX
+RCC.DFSDMFreq_Value=140000000
+PC11.Mode=SD_4_bits_Wide_bus
+RCC.TraceFreq_Value=140000000
+RCC.APB4Freq_Value=140000000
+RCC.CECFreq_Value=32000
+NVIC.BusFault_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+RCC.LPUART1Freq_Value=140000000
+PB13.Mode=Full_Duplex_Master
+ProjectManager.CustomerFirmwarePackage=
+RCC.VCO3OutputFreq_Value=240000000
+VP_ADC2_Vbat_Input.Mode=IN-Vbat
+PE12.Mode=Simplex_Bidirectional_Master
+ProjectManager.ProjectFileName=cubemx.ioc
+RCC.DIVQ3=5
+RCC.DIVQ2=5
+RCC.DIVQ1=4
+Mcu.PinsNb=62
+RCC.SWPMI1Freq_Value=140000000
+PD3.Signal=DCMI_D5
+PE1.Mode=Slave_8_bits_External_Synchro
+RCC.DIVP3=5
+PC6.Signal=DCMI_D0
+PD7.Signal=SPI1_MOSI
+RCC.DIVP2=5
+PC14-OSC32_IN.Signal=RCC_OSC32_IN
+RCC.QSPIFreq_Value=84000000
+Mcu.Pin60=VP_SYS_VS_Systick
+Mcu.Pin61=VP_TIM1_VS_ClockSourceINT
+RCC.USART234578Freq_Value=140000000
+RCC.Tim1OutputFreq_Value=280000000
+Mcu.Pin59=VP_RTC_VS_RTC_Activate
+RCC.CDPPRE1=RCC_APB1_DIV2
+Mcu.Pin57=VP_ADC2_Vbat_Input
+RCC.CDPPRE2=RCC_APB2_DIV2
+RCC.SPI123Freq_Value=140000000
+Mcu.Pin58=VP_OCTOSPI1_VS_quad
+PB11.Mode=I2C
+Mcu.Pin51=PB8
+Mcu.Pin52=PB9
+Mcu.Pin50=PB7
+PC6.Mode=Slave_8_bits_External_Synchro
+Mcu.Pin55=VP_ADC2_TempSens_Input
+Mcu.Pin56=VP_ADC2_Vref_Input
+Mcu.Pin53=PE0
+ADC2.IPParameters=Rank-0\#ChannelRegularConversion,Channel-0\#ChannelRegularConversion,SamplingTime-0\#ChannelRegularConversion,OffsetNumber-0\#ChannelRegularConversion,OffsetSignedSaturation-0\#ChannelRegularConversion,NbrOfConversionFlag
+Mcu.Pin54=PE1
+PA9.Signal=USART1_TX
+RCC.DIVN3=48
+VP_TIM1_VS_ClockSourceINT.Signal=TIM1_VS_ClockSourceINT
+RCC.DIVN2=84
+I2C1.Timing=0x20B0CCFF
+RCC.DIVN1=112
+PB9.Locked=true
+PC2_C.Mode=IN0-Single-Ended
+PD7.Locked=true
+Mcu.Pin48=PB3
+Mcu.Pin49=PB4
+Mcu.Pin46=PD6
+Mcu.Pin47=PD7
+PB10.Signal=I2C2_SCL
+PB14.Signal=SPI2_MISO
+RCC.USBCLockSelection=RCC_USBCLKSOURCE_PLL3
+PA5.Signal=GPIO_Output
+Mcu.Pin40=PA14
+Mcu.Pin41=PC10
+ADC2.OffsetNumber-0\#ChannelRegularConversion=ADC_OFFSET_NONE
+PC12.Mode=SD_4_bits_Wide_bus
+Mcu.Pin44=PD2
+Mcu.Pin45=PD3
+Mcu.Pin42=PC11
+Mcu.Pin43=PC12
+ProjectManager.LastFirmware=true
+RCC.AHB12Freq_Value=280000000
+PE14.Signal=SPI4_MOSI
+PE6.Mode=Slave_8_bits_External_Synchro
+Mcu.Pin37=PA11
+Mcu.Pin38=PA12
+Mcu.Pin35=PA9
+Mcu.Pin36=PA10
+SPI1.Mode=SPI_MODE_MASTER
+Mcu.Pin39=PA13
+RCC.RNGFreq_Value=48000000
+Mcu.Pin30=PC6
+Mcu.Pin33=PC9
+Mcu.Pin34=PA8
+Mcu.Pin31=PC7
+Mcu.Pin32=PC8
+NVIC.NonMaskableInt_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+RCC.CDPPRE=RCC_APB3_DIV2
+PA13.Mode=Serial_Wire
+ProjectManager.FreePins=false
+RCC.LPTIM2Freq_Value=140000000
+Mcu.Pin26=PB15
+Mcu.Pin27=PD11
+Mcu.Pin24=PB13
+ProjectManager.UnderRoot=false
+Mcu.Pin25=PB14
+Mcu.Pin28=PD12
+PC8.Mode=SD_4_bits_Wide_bus
+Mcu.Pin29=PD13
+PB4.Locked=true
+PA4.Signal=DCMI_HSYNC
+OCTOSPI1.MemoryType=HAL_OSPI_MEMTYPE_MACRONIX_RAM
+Mcu.Pin22=PB10
+Mcu.Pin23=PB11
+Mcu.Pin20=PE12
+Mcu.Pin21=PE14
+PD12.Mode=OCTOSPI1_IOL_Port1L
+ADC2.NbrOfConversionFlag=1
+NVIC.ForceEnableDMAVector=true
+PD11.Signal=OCTOSPIM_P1_IO0
+NVIC.MemoryManagement_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+ProjectManager.CompilerOptimize=6
+PA11.Signal=USB_OTG_HS_DM
+ProjectManager.HeapSize=0x200
+Mcu.Pin15=PC4
+NVIC.HardFault_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+Mcu.Pin16=PC5
+Mcu.Pin13=PA6
+Mcu.Pin14=PA7
+Mcu.Pin19=PB2
+RCC.LPTIM345Freq_Value=140000000
+ProjectManager.ComputerToolchain=false
+Mcu.Pin17=PB0
+Mcu.Pin18=PB1
+RCC.LTDCFreq_Value=48000000
+NVIC.PriorityGroup=NVIC_PRIORITYGROUP_4
+Mcu.Pin11=PA4
+Mcu.Pin12=PA5
+PB8.Mode=I2C
+Mcu.Pin10=PA1
+PE3.Signal=GPIO_Input
+SPI2.DataSize=SPI_DATASIZE_8BIT
+PD2.Signal=SDMMC1_CMD
+RCC.HCLK3ClockFreq_Value=280000000
+RCC.DIVR3=5
+RCC.DIVR2=5
+RCC.DIVR1=4
+PB0.Signal=GPIO_Output
+RCC.SAI2AFreq_Value=140000000
+Mcu.Family=STM32H7
+RCC.DIVQ2Freq_Value=84000000
+ProjectManager.MainLocation=Core/Src
+I2C2.IPParameters=Timing
+PA6.Mode=Slave_8_bits_External_Synchro
+RCC.CDCPREFreq_Value=280000000
+RCC.SAI1Freq_Value=140000000
+RCC.CortexFreq_Value=280000000
+ProjectManager.KeepUserCode=true
+Mcu.UserName=STM32H7A3VITx
+ADC2.Channel-0\#ChannelRegularConversion=ADC_CHANNEL_VREFINT
+PC10.Signal=SDMMC1_D2
+PC5.Locked=true
+SPI4.Direction=SPI_DIRECTION_1LINE
+I2C2.Timing=0x20B0CCFF
+ProjectManager.functionlistsort=1-MX_GPIO_Init-GPIO-false-HAL-true,2-SystemClock_Config-RCC-false-HAL-false,3-MX_USB_OTG_HS_PCD_Init-USB_OTG_HS-false-HAL-true,4-MX_DCMI_Init-DCMI-false-HAL-true,5-MX_SDMMC1_SD_Init-SDMMC1-false-HAL-true,6-MX_SPI2_Init-SPI2-false-HAL-true,7-MX_I2C2_Init-I2C2-false-HAL-true,8-MX_OCTOSPI1_Init-OCTOSPI1-false-HAL-true,9-MX_I2C1_Init-I2C1-false-HAL-true,10-MX_SPI1_Init-SPI1-false-HAL-true,11-MX_SPI4_Init-SPI4-false-HAL-true,12-MX_ADC2_Init-ADC2-false-HAL-true,13-MX_USART1_UART_Init-USART1-false-HAL-true,14-MX_TIM1_Init-TIM1-false-HAL-true,0-MX_CORTEX_M7_Init-CORTEX_M7-false-HAL-true
+PA11.Mode=Device_Only_FS
+PD6.Locked=true
+RCC.PLL2FRACN=0
+RCC.VCO2OutputFreq_Value=420000000
+PB11.Signal=I2C2_SDA
+PB15.Signal=SPI2_MOSI
+ProjectManager.StackSize=0x400
+RCC.VCOInput3Freq_Value=5000000
+PD13.Signal=OCTOSPIM_P1_IO3
+Mcu.IP4=I2C1
+Mcu.IP5=I2C2
+I2C1.IPParameters=Timing
+Mcu.IP2=DCMI
+Mcu.IP3=DEBUG
+Mcu.IP0=ADC2
+Mcu.IP1=CORTEX_M7
+PA12.Signal=USB_OTG_HS_DP
+OCTOSPI1.ClockPrescaler=3
+Mcu.UserConstants=
+SPI4.Mode=SPI_MODE_MASTER
+RCC.DIVP3Freq_Value=48000000
+RCC.SDMMCFreq_Value=140000000
+Mcu.ThirdPartyNb=0
+RCC.HCLKFreq_Value=280000000
+Mcu.IPNb=18
+ProjectManager.PreviousToolchain=
+RCC.SPDIFRXFreq_Value=140000000
+Mcu.Pin6=PC15-OSC32_OUT
+Mcu.Pin7=PH0-OSC_IN
+Mcu.Pin8=PH1-OSC_OUT
+Mcu.Pin9=PC2_C
+SPI4.IPParameters=VirtualType,Mode,Direction,CalculateBaudRate
+PC2_C.Signal=ADC2_INP0
+SPI2.BaudRatePrescaler=SPI_BAUDRATEPRESCALER_2
+PH0-OSC_IN.Mode=HSE-External-Oscillator
+Mcu.Pin0=PE2
+Mcu.Pin1=PE3
+GPIO.groupedBy=
+Mcu.Pin2=PE4
+Mcu.Pin3=PE5
+Mcu.Pin4=PE6
+Mcu.Pin5=PC14-OSC32_IN
+RCC.DIVR3Freq_Value=48000000
+RCC.HSE_VALUE=25000000
+NVIC.DebugMonitor_IRQn=true\:0\:0\:false\:false\:true\:false\:false
+Mcu.IP10=SDMMC1
+NVIC.SysTick_IRQn=true\:0\:0\:false\:false\:true\:false\:true
+Mcu.IP12=SPI2
+Mcu.IP11=SPI1
+Mcu.IP17=USB_OTG_HS
+RCC.DIVP1Freq_Value=280000000
+Mcu.IP14=SYS
+PB4.Mode=Full_Duplex_Master
+Mcu.IP13=SPI4
+Mcu.IP16=USART1
+Mcu.IP15=TIM1
+PC14-OSC32_IN.Mode=LSE-External-Oscillator
+PA14.Mode=Serial_Wire
+VP_ADC2_TempSens_Input.Signal=ADC2_TempSens_Input
+File.Version=6
+PE3.Locked=true
+PB7.Signal=DCMI_VSYNC
+PB8.Locked=true
+PE4.Mode=Slave_8_bits_External_Synchro
+PE4.Signal=DCMI_D4
+PB0.Locked=true
+ProjectManager.ProjectName=cubemx
+RCC.APB3Freq_Value=140000000
+PH1-OSC_OUT.Mode=HSE-External-Oscillator
+PA6.Signal=DCMI_PIXCLK
+PA7.Locked=true
+ProjectManager.ToolChainLocation=
+ADC2.SamplingTime-0\#ChannelRegularConversion=ADC_SAMPLETIME_1CYCLE_5
+RCC.DIVR1Freq_Value=140000000
+PC4.Locked=true
+SPI2.Direction=SPI_DIRECTION_2LINES
+PC5.Signal=GPIO_Input
+ADC2.Rank-0\#ChannelRegularConversion=1
+PD6.Signal=GPIO_Output
+VP_OCTOSPI1_VS_quad.Signal=OCTOSPI1_VS_quad
+PE12.Locked=true
+RCC.SRDPPRE=RCC_APB4_DIV2
+RCC.Tim2OutputFreq_Value=280000000
+RCC.DFSDMACLkFreq_Value=140000000
+PB4.Signal=SPI1_MISO
+PB3.Locked=true
+PB15.Locked=true
+VP_RTC_VS_RTC_Activate.Signal=RTC_VS_RTC_Activate
+PC15-OSC32_OUT.Mode=LSE-External-Oscillator
+VP_ADC2_TempSens_Input.Mode=IN-TempSens
+PA10.Mode=Asynchronous
+ProjectManager.NoMain=false
+SPI1.IPParameters=VirtualType,Mode,Direction,CalculateBaudRate
+PC11.Signal=SDMMC1_D3
+SPI2.NSSPMode=SPI_NSS_PULSE_ENABLE
+PC8.Signal=SDMMC1_D0
+PC4.Signal=GPIO_Output
+PC10.Mode=SD_4_bits_Wide_bus
+ProjectManager.DefaultFWLocation=true
+ProjectManager.DeletePrevious=true
+PB10.Locked=true
+ADC2.OffsetSignedSaturation-0\#ChannelRegularConversion=DISABLE
+RCC.FamilyName=M
+RCC.SPI6Freq_Value=140000000
+USART1.VirtualMode-Asynchronous=VM_ASYNC
+PA13.Signal=DEBUG_JTMS-SWDIO
+PA9.Mode=Asynchronous
+RCC.SPI45Freq_Value=140000000
+ProjectManager.TargetToolchain=Makefile
+RCC.VCO1OutputFreq_Value=560000000
+VP_ADC2_Vbat_Input.Signal=ADC2_Vbat_Input
+PB9.Mode=I2C
+RCC.AXIClockFreq_Value=280000000
+PD13.Mode=OCTOSPI1_IOL_Port1L
+SPI2.IPParameters=VirtualType,Mode,Direction,CalculateBaudRate,DataSize,BaudRatePrescaler,NSSPMode
+ProjectManager.RegisterCallBack=
+RCC.USBFreq_Value=48000000
+PC15-OSC32_OUT.Signal=RCC_OSC32_OUT
+PA1.Signal=GPIO_Output
+RCC.CKPERFreq_Value=64000000
+PB1.Locked=true
+PD2.Mode=SD_4_bits_Wide_bus
+DCMI.IPParameters=PCKPolarity
+board=custom
+PB15.Mode=Full_Duplex_Master
+RCC.VCOInput1Freq_Value=5000000
+RCC.APB2Freq_Value=140000000
+MxCube.Version=6.1.0
+RCC.FDCANFreq_Value=140000000
+PE14.Mode=Simplex_Bidirectional_Master
+PE5.Mode=Slave_8_bits_External_Synchro
+RCC.ADCFreq_Value=84000000
+VP_SYS_VS_Systick.Mode=SysTick
+PH1-OSC_OUT.Signal=RCC_OSC_OUT
+SPI4.CalculateBaudRate=70.0 MBits/s
+PE6.Signal=DCMI_D7
+RCC.IPParameters=ADCFreq_Value,AHB12Freq_Value,AHB4Freq_Value,APB1Freq_Value,APB2Freq_Value,APB3Freq_Value,APB4Freq_Value,AXIClockFreq_Value,CDCPREFreq_Value,CDPPRE,CDPPRE1,CDPPRE2,CECFreq_Value,CKPERFreq_Value,CortexFreq_Value,CpuClockFreq_Value,DFSDM2ACLkFreq_Value,DFSDM2Freq_Value,DFSDMACLkFreq_Value,DFSDMFreq_Value,DIVM1,DIVM2,DIVM3,DIVN1,DIVN2,DIVN3,DIVP1Freq_Value,DIVP2,DIVP2Freq_Value,DIVP3,DIVP3Freq_Value,DIVQ1,DIVQ1Freq_Value,DIVQ2,DIVQ2Freq_Value,DIVQ3,DIVQ3Freq_Value,DIVR1,DIVR1Freq_Value,DIVR2,DIVR2Freq_Value,DIVR3,DIVR3Freq_Value,FDCANFreq_Value,FMCFreq_Value,FamilyName,HCLK3ClockFreq_Value,HCLKFreq_Value,HSE_VALUE,I2C123Freq_Value,I2C4Freq_Value,LPTIM1Freq_Value,LPTIM2Freq_Value,LPTIM345Freq_Value,LPUART1Freq_Value,LTDCFreq_Value,MCO1PinFreq_Value,MCO2PinFreq_Value,PLL2FRACN,PLL3FRACN,PLLFRACN,QSPICLockSelection,QSPIFreq_Value,RNGFreq_Value,RTCFreq_Value,SAI1Freq_Value,SAI2AFreq_Value,SAI2BFreq_Value,SDMMCFreq_Value,SPDIFRXFreq_Value,SPI123Freq_Value,SPI45Freq_Value,SPI6Freq_Value,SRDPPRE,SWPMI1Freq_Value,SYSCLKFreq_VALUE,SYSCLKSource,Tim1OutputFreq_Value,Tim2OutputFreq_Value,TraceFreq_Value,USART16Freq_Value,USART234578Freq_Value,USBCLockSelection,USBFreq_Value,VCO1OutputFreq_Value,VCO2OutputFreq_Value,VCO3OutputFreq_Value,VCOInput1Freq_Value,VCOInput2Freq_Value,VCOInput3Freq_Value
+ProjectManager.AskForMigrate=true
+PE0.Signal=DCMI_D2
+Mcu.Name=STM32H7A3V(G-I)Tx
+PE12.Signal=SPI4_SCK
+PB2.Locked=true
+Mcu.IP8=RCC
+Mcu.IP9=RTC
+Mcu.IP6=NVIC
+Mcu.IP7=OCTOSPI1
+ProjectManager.CoupleFile=false
+PB3.Signal=SPI1_SCK
+RCC.SYSCLKFreq_VALUE=280000000
+RCC.I2C123Freq_Value=140000000
+PA1.Locked=true
+PA12.Mode=Device_Only_FS
+KeepUserPlacement=false
+USB_OTG_HS.VirtualMode=Device_Only_FS
+PA13.Locked=true
+PB2.Mode=O1_P1_CLK
+RCC.QSPICLockSelection=RCC_OSPICLKSOURCE_PLL2
+PB7.Mode=Slave_8_bits_External_Synchro
+PA14.Signal=DEBUG_JTCK-SWCLK
+PD11.Mode=OCTOSPI1_IOL_Port1L
+OCTOSPI1.IPParameters=MemoryType,SampleShifting,ClockPrescaler
+RCC.DIVQ1Freq_Value=140000000
+PB8.Signal=I2C1_SCL
+PC9.Signal=SDMMC1_D1
+PC7.Mode=Slave_8_bits_External_Synchro
+RCC.VCOInput2Freq_Value=5000000
+RCC.APB1Freq_Value=140000000
+VP_ADC2_Vref_Input.Mode=IN-Vrefint
+PB11.Locked=true
+ProjectManager.DeviceId=STM32H7A3VITx
+PE0.Mode=Slave_8_bits_External_Synchro
+ProjectManager.LibraryCopy=0
+PA7.Signal=GPIO_Output
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/cubemx/cubemx.pdf b/ports/stm32/boards/DEVEBOX_STM32H7A3/cubemx/cubemx.pdf
new file mode 100644
index 000000000..5a989e771
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H7A3/cubemx/cubemx.pdf differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/STM32H7XX_M.jpg b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/STM32H7XX_M.jpg
new file mode 100644
index 000000000..9a9feccff
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/STM32H7XX_M.jpg differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/STM32H7XX_M_camera.jpg b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/STM32H7XX_M_camera.jpg
new file mode 100644
index 000000000..05789e289
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/STM32H7XX_M_camera.jpg differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/STM32H7XX_M_display.jpg b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/STM32H7XX_M_display.jpg
new file mode 100644
index 000000000..f3bdac37d
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/STM32H7XX_M_display.jpg differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/STM32H7XX_M_schematics.pdf b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/STM32H7XX_M_schematics.pdf
new file mode 100644
index 000000000..1f83baf10
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/STM32H7XX_M_schematics.pdf differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/dm00237416-stm32f7-series-and-stm32h7-series-cortexm7-processor-programming-manual-stmicroelectronics.pdf b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/dm00237416-stm32f7-series-and-stm32h7-series-cortexm7-processor-programming-manual-stmicroelectronics.pdf
new file mode 100644
index 000000000..113b40cb3
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/dm00237416-stm32f7-series-and-stm32h7-series-cortexm7-processor-programming-manual-stmicroelectronics.pdf differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/dm00463927-stm32h7a37b3-and-stm32h7b0-value-line-advanced-armbased-32bit-mcus-stmicroelectronics.pdf b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/dm00463927-stm32h7a37b3-and-stm32h7b0-value-line-advanced-armbased-32bit-mcus-stmicroelectronics.pdf
new file mode 100644
index 000000000..908fd91e6
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/dm00463927-stm32h7a37b3-and-stm32h7b0-value-line-advanced-armbased-32bit-mcus-stmicroelectronics.pdf differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/dm00598144-stm32h7a3xig-stm32h7b0xb-and-stm32h7b3xi-device-errata-stmicroelectronics.pdf b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/dm00598144-stm32h7a3xig-stm32h7b0xb-and-stm32h7b3xi-device-errata-stmicroelectronics.pdf
new file mode 100644
index 000000000..66fee3236
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/dm00598144-stm32h7a3xig-stm32h7b0xb-and-stm32h7b3xi-device-errata-stmicroelectronics.pdf differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/dm00600614-migration-guide-from-stm32f7-series-and-stm32h743753-line-to-stm32h7a37b3-and-stm32h7b0-value-line-devices-stmicroelectronics.pdf b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/dm00600614-migration-guide-from-stm32f7-series-and-stm32h743753-line-to-stm32h7a37b3-and-stm32h7b0-value-line-devices-stmicroelectronics.pdf
new file mode 100644
index 000000000..92f2d20ee
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/dm00600614-migration-guide-from-stm32f7-series-and-stm32h743753-line-to-stm32h7a37b3-and-stm32h7b0-value-line-devices-stmicroelectronics.pdf differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/stm32h750vb.pdf b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/stm32h750vb.pdf
new file mode 100644
index 000000000..4e1465b16
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/stm32h750vb.pdf differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/stm32h7a3ai.pdf b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/stm32h7a3ai.pdf
new file mode 100644
index 000000000..f51ffbf57
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/stm32h7a3ai.pdf differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/stm32h7a3vi.pdf b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/stm32h7a3vi.pdf
new file mode 100644
index 000000000..f51ffbf57
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/stm32h7a3vi.pdf differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/stm32h7b3ri.pdf b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/stm32h7b3ri.pdf
new file mode 100644
index 000000000..4d5ba3e77
Binary files /dev/null and b/ports/stm32/boards/DEVEBOX_STM32H7A3/docs/stm32h7b3ri.pdf differ
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/mpconfigboard.h b/ports/stm32/boards/DEVEBOX_STM32H7A3/mpconfigboard.h
new file mode 100644
index 000000000..95c689168
--- /dev/null
+++ b/ports/stm32/boards/DEVEBOX_STM32H7A3/mpconfigboard.h
@@ -0,0 +1,135 @@
+#define MICROPY_HW_BOARD_NAME       "DEVEBOX STM32H7XX"
+#define MICROPY_HW_MCU_NAME         "STM32H7A3"
+
+
+#define MICROPY_PY_PYB_LEGACY       (0)
+#define MICROPY_HW_ENABLE_INTERNAL_FLASH_STORAGE (0)
+#define MICROPY_HW_HAS_SWITCH       (1)
+#define MICROPY_HW_HAS_FLASH        (0)
+#define MICROPY_HW_ENABLE_RNG       (1)
+#define MICROPY_HW_ENABLE_RTC       (1)
+#define MICROPY_HW_ENABLE_TIMER     (1)
+#define MICROPY_HW_ENABLE_SERVO     (0)
+#define MICROPY_HW_ENABLE_DAC       (1)
+#define MICROPY_HW_ENABLE_USB       (1)
+#define MICROPY_HW_ENABLE_SDCARD    (1)
+#define MICROPY_HW_ENABLE_MMCARD    (0)
+
+
+// Settings for 280 MHz cpu clock.
+// Values from stm32cubemx clock configuration.
+// HSE external crystal is 25 MHz.
+
+#define MICROPY_HW_CLK_PLLM (5)
+#define MICROPY_HW_CLK_PLLN (112)
+#define MICROPY_HW_CLK_PLLP (2)
+#define MICROPY_HW_CLK_PLLQ (4)
+#define MICROPY_HW_CLK_PLLR (4)
+
+// Settings for USB clock.
+// Values from stm32cubemx clock configuration.
+// HSE external crystal is 25 MHz.
+#define MICROPY_HW_CLK_PLL3M (5)
+#define MICROPY_HW_CLK_PLL3N (48)
+#define MICROPY_HW_CLK_PLL3P (5)
+#define MICROPY_HW_CLK_PLL3Q (5)
+#define MICROPY_HW_CLK_PLL3R (5)
+
+// AXI bus at 280 MHz, 8 wait states.
+// From cubemx -> Pinout & Configuration -> System Core -> RCC -> Parameter Settings -> System Parameters -> Flash Latency
+// See RM0433 Reference Manual, Table 17 "FLASH recommended number of wait states and programming delay."
+#define MICROPY_HW_FLASH_LATENCY    FLASH_LATENCY_7
+
+// RTC
+// LSE external crystal is 32768 Hz.
+#define MICROPY_HW_RTC_USE_LSE      (1)
+#define MICROPY_HW_RTC_USE_US       (0)
+
+// USB config
+#define MICROPY_HW_USB_FS           (0)
+#define MICROPY_HW_USB_HS           (1)
+#define MICROPY_HW_USB_HS_IN_FS     (1)
+#define MICROPY_HW_USB_MAIN_DEV     (USB_PHY_HS_ID)
+#define MICROPY_HW_USB_CDC_NUM      (2)
+#define MICROPY_HW_USB_MSC          (0)
+
+// pushbutton
+#define MICROPY_HW_USRSW_PIN        (pyb_pin_USRSW1)
+#define MICROPY_HW_USRSW_PULL       (GPIO_PULLUP)
+#define MICROPY_HW_USRSW_EXTI_MODE  (GPIO_MODE_IT_FALLING)
+#define MICROPY_HW_USRSW_PRESSED    (0)
+
+//// Winbond W25Q64 64Mbit external QSPI flash
+//#define MICROPY_HW_QSPIFLASH_SIZE_BITS_LOG2 (26)
+//#define MICROPY_HW_QSPIFLASH_CS     (pyb_pin_QSPI_BK1_NCS)
+//#define MICROPY_HW_QSPIFLASH_SCK    (pyb_pin_QSPI_CLK)
+//#define MICROPY_HW_QSPIFLASH_IO0    (pyb_pin_QSPI_BK1_IO0)
+//#define MICROPY_HW_QSPIFLASH_IO1    (pyb_pin_QSPI_BK1_IO1)
+//#define MICROPY_HW_QSPIFLASH_IO2    (pyb_pin_QSPI_BK1_IO2)
+//#define MICROPY_HW_QSPIFLASH_IO3    (pyb_pin_QSPI_BK1_IO3)
+
+// TFT/OLED display connector
+// used to connect target
+
+#define MICROPY_HW_SPI2_SCK                 (pin_B13)
+#define MICROPY_HW_SPI2_MISO                (pin_B14)
+#define MICROPY_HW_SPI2_MOSI                (pin_B15)
+#define MICROPY_HW_SPI2_CS                  (pin_B12)
+
+// DCMI connector for OV2640-200/OV5640-500 camera.
+
+// SD card. Detect switch missing.
+#define MICROPY_HW_SDMMC_D0                 (pyb_pin_SD_D0)
+#define MICROPY_HW_SDMMC_D1                 (pyb_pin_SD_D1)
+#define MICROPY_HW_SDMMC_D2                 (pyb_pin_SD_D2)
+#define MICROPY_HW_SDMMC_D3                 (pyb_pin_SD_D3)
+#define MICROPY_HW_SDMMC_CK                 (pyb_pin_SD_CK)
+#define MICROPY_HW_SDMMC_CMD                (pyb_pin_SD_CMD)
+#define MICROPY_HW_SDCARD_DETECT_PIN        (pyb_pin_SD_SW) // XXX dummy, no switch at this pin
+#define MICROPY_HW_SDCARD_DETECT_PULL       (GPIO_PULLUP)
+#define MICROPY_HW_SDCARD_DETECT_PRESENT    (GPIO_PIN_RESET)
+#define MICROPY_HW_SDCARD_MOUNT_AT_BOOT     (0)
+
+// UART
+#define MICROPY_HW_UART2_TX     (pin_A3)
+#define MICROPY_HW_UART2_RX     (pin_A2)
+
+#define MICROPY_HW_UART7_TX     (pin_E8)
+#define MICROPY_HW_UART7_RX     (pin_E7)
+
+// I2C
+#define MICROPY_HW_I2C1_SCL     (pin_B8)
+#define MICROPY_HW_I2C1_SDA     (pin_B9)
+
+#define MICROPY_HW_I2C2_SCL     (pin_B10)
+#define MICROPY_HW_I2C2_SDA     (pin_B11)
+
+// SPI
+#define MICROPY_HW_SPI1_SCK     (pin_A5)
+#define MICROPY_HW_SPI1_MISO    (pin_A6)
+#define MICROPY_HW_SPI1_MOSI    (pin_A7)
+#define MICROPY_HW_SPI1_CS      (pin_A4)
+
+// CAN
+#define MICROPY_HW_CAN1_TX      (pin_B9)
+#define MICROPY_HW_CAN1_RX      (pin_B8)
+
+/******************************************************************************/
+// Bootloader configuration
+
+//#define MBOOT_USB_AUTODETECT_PORT   (0)
+#define MBOOT_FSLOAD                (0)
+
+// configure pin to force entry into the boot loader
+#define MBOOT_BOOTPIN_PIN           (pyb_pin_USRSW2)
+#define MBOOT_BOOTPIN_PULL          (MP_HAL_PIN_PULL_UP)
+#define MBOOT_BOOTPIN_ACTIVE        (0)
+
+// definitions below only to allow compilation of bootloader
+#define MICROPY_HW_LED_INVERTED     (1) // LEDs are on when pin is driven low
+#define MICROPY_HW_LED1             (pyb_pin_LED)
+#define MICROPY_HW_LED2             (pyb_pin_PD9) // pin has no led, but LED2 has to be defined to compile bootloader XXX
+#define MICROPY_HW_LED_ON(pin)      (mp_hal_pin_low(pin))
+#define MICROPY_HW_LED_OFF(pin)     (mp_hal_pin_high(pin))
+
+// not truncated
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/mpconfigboard.mk b/ports/stm32/boards/DEVEBOX_STM32H7A3/mpconfigboard.mk
new file mode 100644
index 000000000..624015692
--- /dev/null
+++ b/ports/stm32/boards/DEVEBOX_STM32H7A3/mpconfigboard.mk
@@ -0,0 +1,20 @@
+# MCU settings
+MCU_SERIES = h7
+MCU_ARCH = stm32
+CMSIS_MCU = STM32H7A3xx
+MICROPY_FLOAT_IMPL = single
+AF_FILE = boards/stm32h743_af.csv
+LD_FILES = boards/stm32h7a3.ld boards/common_blifs.ld
+TEXT0_ADDR = 0x08020000
+
+# MicroPython settings
+MICROPY_PY_BLUETOOTH = 0
+MICROPY_BLUETOOTH_NIMBLE = 0
+MICROPY_BLUETOOTH_BTSTACK = 0
+MICROPY_PY_LWIP = 0
+MICROPY_PY_NETWORK_CYW43 = 0
+MICROPY_PY_USSL = 0
+MICROPY_SSL_MBEDTLS = 0
+MICROPY_VFS_LFS2 = 1
+
+#not truncated
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/pins.csv b/ports/stm32/boards/DEVEBOX_STM32H7A3/pins.csv
new file mode 100644
index 000000000..71eafa3b6
--- /dev/null
+++ b/ports/stm32/boards/DEVEBOX_STM32H7A3/pins.csv
@@ -0,0 +1,143 @@
+PA0,PA0
+PA1,PA1
+PA2,PA2
+PA3,PA3
+PA4,PA4
+PA5,PA5
+PA6,PA6
+PA7,PA7
+PA8,PA8
+PA9,PA9
+PA10,PA10
+PA11,PA11
+PA12,PA12
+PA13,PA13
+PA14,PA14
+PA15,PA15
+PB0,PB0
+PB1,PB1
+PB2,PB2
+PB3,PB3
+PB4,PB4
+PB5,PB5
+PB6,PB6
+PB7,PB7
+PB8,PB8
+PB9,PB9
+PB10,PB10
+PB11,PB11
+PB12,PB12
+PB13,PB13
+PB14,PB14
+PB15,PB15
+PC0,PC0
+PC1,PC1
+PC2,PC2
+PC3,PC3
+PC4,PC4
+PC5,PC5
+PC6,PC6
+PC7,PC7
+PC8,PC8
+PC9,PC9
+PC10,PC10
+PC11,PC11
+PC12,PC12
+PC13,PC13
+PC14,PC14
+PC15,PC15
+PD0,PD0
+PD1,PD1
+PD2,PD2
+PD3,PD3
+PD4,PD4
+PD5,PD5
+PD6,PD6
+PD7,PD7
+PD8,PD8
+PD9,PD9
+PD10,PD10
+PD11,PD11
+PD12,PD12
+PD13,PD13
+PD14,PD14
+PD15,PD15
+PE0,PE0
+PE1,PE1
+PE2,PE2
+PE3,PE3
+PE4,PE4
+PE5,PE5
+PE6,PE6
+PE7,PE7
+PE8,PE8
+PE9,PE9
+PE10,PE10
+PE11,PE11
+PE12,PE12
+PE13,PE13
+PE14,PE14
+PE15,PE15
+PF0,PF0
+PF1,PF1
+PF2,PF2
+PF3,PF3
+PF4,PF4
+PF5,PF5
+PF6,PF6
+PF7,PF7
+PF8,PF8
+PF9,PF9
+PF10,PF10
+PF11,PF11
+PF12,PF12
+PF13,PF13
+PF14,PF14
+PF15,PF15
+LED,PA1
+USB_DM,PA11
+USB_DP,PA12
+OSC32_IN,PC14
+OSC32_OUT,PC15
+TFT_SDI,PB15
+TFT_SCL,PB13
+TFT_CS,PB12
+TFT_SDO,PB14
+TFT_DC,PB1
+TFT_BLK,PB0
+SD_D0,PC8
+SD_D1,PC9
+SD_D2,PC10
+SD_D3,PC11
+SD_CK,PC12
+SD_CMD,PD2
+SD_SW,PD8
+DCMI_SDA,PB11
+DCMI_SCL,PB10
+DCMI_RESET,PC4
+DCMI_CH1,PA5
+DCMI_PWDN,PA7
+DCMI_HREF,PA4
+DCMI_VSYNC,PB7
+DCMI_D0,PC6
+DCMI_D1,PC7
+DCMI_D2,PE0
+DCMI_D3,PE1
+DCMI_D4,PE4
+DCMI_D5,PD3
+DCMI_D6,PE5
+DCMI_D7,PE6
+DCMI_PCLK,PA6
+DCMI_XCLK,PA8
+QSPI_BK1_NCS,PB6
+QSPI_CLK,PB2
+QSPI_BK1_IO0,PD11
+QSPI_BK1_IO1,PD12
+QSPI_BK1_IO2,PE2
+QSPI_BK1_IO3,PD13
+USRSW1,PE3
+USRSW2,PC5
+UART7_RX,PE7
+UART7_TX,PE8
+USART2_RX,PA3
+USART2_TX,PA2
diff --git a/ports/stm32/boards/DEVEBOX_STM32H7A3/stm32h7xx_hal_conf.h b/ports/stm32/boards/DEVEBOX_STM32H7A3/stm32h7xx_hal_conf.h
new file mode 100644
index 000000000..47f6135f8
--- /dev/null
+++ b/ports/stm32/boards/DEVEBOX_STM32H7A3/stm32h7xx_hal_conf.h
@@ -0,0 +1,15 @@
+#ifndef MICROPY_INCLUDED_STM32H7XX_HAL_CONF_H
+#define MICROPY_INCLUDED_STM32H7XX_HAL_CONF_H
+
+#include "boards/stm32h7xx_hal_conf_base.h"
+
+// Oscillator values in Hz
+#define HSE_VALUE (25000000)
+#define LSE_VALUE (32768)
+#define EXTERNAL_CLOCK_VALUE (12288000)
+
+// Oscillator timeouts in ms
+#define HSE_STARTUP_TIMEOUT (5000)
+#define LSE_STARTUP_TIMEOUT (5000)
+
+#endif // MICROPY_INCLUDED_STM32H7XX_HAL_CONF_H
diff --git a/ports/stm32/boards/stm32h7a3.ld b/ports/stm32/boards/stm32h7a3.ld
new file mode 100644
index 000000000..5967ac446
--- /dev/null
+++ b/ports/stm32/boards/stm32h7a3.ld
@@ -0,0 +1,31 @@
+/*
+    GNU linker script for STM32H7A3
+*/
+
+/* Specify the memory areas */
+MEMORY
+{
+    FLASH (rx)      : ORIGIN = 0x08000000, LENGTH = 2048K   /* 8K sector size */
+    FLASH_ISR (rx)  : ORIGIN = 0x08000000, LENGTH = 32K     /* bootloader */
+    FLASH_FS (r)    : ORIGIN = 0x08008000, LENGTH = 96K     /* minimal file system */
+    FLASH_TEXT (rx) : ORIGIN = 0x08020000, LENGTH = 1920K   /* code */
+    DTCM (xrw)      : ORIGIN = 0x20000000, LENGTH = 128K    /* Used for storage cache */
+    RAM (xrw)       : ORIGIN = 0x24000000, LENGTH = 1024K   /* AXI SRAM */
+}
+
+/* produce a link error if there is not this amount of RAM for these sections */
+_minimum_stack_size = 2K;
+_minimum_heap_size = 16K;
+
+/* Define the stack.  The stack is full descending so begins just above last byte
+   of RAM.  Note that EABI requires the stack to be 8-byte aligned for a call. */
+_estack = ORIGIN(RAM) + LENGTH(RAM) - _estack_reserve;
+_sstack = _estack - 16K; /* tunable */
+
+/* RAM extents for the garbage collector */
+_ram_start = ORIGIN(RAM);
+_ram_end = ORIGIN(RAM) + LENGTH(RAM);
+_heap_start = _ebss; /* heap starts just after statically allocated memory */
+_heap_end = _sstack;
+
+/* not truncated */
diff --git a/ports/stm32/extint.c b/ports/stm32/extint.c
index 695655f09..4d6dd1179 100644
--- a/ports/stm32/extint.c
+++ b/ports/stm32/extint.c
@@ -166,7 +166,11 @@ STATIC const uint8_t nvic_irq_channel[EXTI_NUM_VECTORS] = {
     #if defined(STM32H7)
     PVD_AVD_IRQn,
     RTC_Alarm_IRQn,
+    #if defined(STM32H7A3xx)
+    RTC_TAMP_STAMP_CSS_LSE_IRQn,
+    #else
     TAMP_STAMP_IRQn,
+    #endif
     RTC_WKUP_IRQn,
     #elif defined(STM32WB)
     PVD_PVM_IRQn,
diff --git a/ports/stm32/flash.c b/ports/stm32/flash.c
index d399ece86..db02d6f30 100644
--- a/ports/stm32/flash.c
+++ b/ports/stm32/flash.c
@@ -24,6 +24,7 @@
  * THE SOFTWARE.
  */
 
+#include "stm32h7a3xx.h"
 #include "py/mpconfig.h"
 #include "py/misc.h"
 #include "py/mphal.h"
@@ -253,7 +254,11 @@ int flash_erase(uint32_t flash_dest, uint32_t num_word32) {
     #endif
 
     EraseInitStruct.TypeErase = TYPEERASE_SECTORS;
+    #if defined(FLASH_CR_PSIZE)
     EraseInitStruct.VoltageRange = VOLTAGE_RANGE_3; // voltage range needs to be 2.7V to 3.6V
+    #else
+    EraseInitStruct.VoltageRange = 0; // unused parameter on STM32H7A3
+    #endif
     #if defined(STM32H7)
     EraseInitStruct.Banks = get_bank(flash_dest);
     #endif
diff --git a/ports/stm32/machine_adc.c b/ports/stm32/machine_adc.c
index 9c20f0f95..0f32c7aea 100644
--- a/ports/stm32/machine_adc.c
+++ b/ports/stm32/machine_adc.c
@@ -129,6 +129,8 @@ STATIC void adc_config(ADC_TypeDef *adc, uint32_t bits) {
     adc->CFGR2 = 2 << ADC_CFGR2_CKMODE_Pos; // PCLK/4 (synchronous clock mode)
     #elif defined(STM32F4) || defined(STM32F7) || defined(STM32L4)
     ADCx_COMMON->CCR = 0; // ADCPR=PCLK/2
+    #elif defined(STM32H7A3xx)
+    ADC12_COMMON->CCR = 3 << ADC_CCR_CKMODE_Pos;
     #elif defined(STM32H7)
     ADC12_COMMON->CCR = 3 << ADC_CCR_CKMODE_Pos;
     ADC3_COMMON->CCR = 3 << ADC_CCR_CKMODE_Pos;
@@ -290,7 +292,10 @@ STATIC void adc_config_channel(ADC_TypeDef *adc, uint32_t channel, uint32_t samp
 
     #elif defined(STM32H7) || defined(STM32L4) || defined(STM32WB)
 
-    #if defined(STM32H7)
+    #if defined(STM32H7A3xx)
+    adc->PCSEL |= 1 << channel;
+    ADC_Common_TypeDef *adc_common = ADC12_COMMON;
+    #elif defined(STM32H7)
     adc->PCSEL |= 1 << channel;
     ADC_Common_TypeDef *adc_common = adc == ADC3 ? ADC3_COMMON : ADC12_COMMON;
     #elif defined(STM32L4)
@@ -405,7 +410,7 @@ STATIC mp_obj_t machine_adc_make_new(const mp_obj_type_t *type, size_t n_args, s
         } else if (pin->adc_num & PIN_ADC2) {
             adc = ADC2;
         #endif
-        #if defined(ADC2)
+        #if defined(ADC3)
         } else if (pin->adc_num & PIN_ADC3) {
             adc = ADC3;
         #endif
diff --git a/ports/stm32/main.c b/ports/stm32/main.c
index d00c2ec71..28762e5cb 100644
--- a/ports/stm32/main.c
+++ b/ports/stm32/main.c
@@ -378,7 +378,7 @@ void stm32_main(uint32_t reset_mode) {
     // enable the CCM RAM
     __HAL_RCC_CCMDATARAMEN_CLK_ENABLE();
     #endif
-    #elif defined(STM32H7)
+    #elif defined(STM32H7) && !defined(STM32H7A3xx)
     // Enable D2 SRAM1/2/3 clocks.
     __HAL_RCC_D2SRAM1_CLK_ENABLE();
     __HAL_RCC_D2SRAM2_CLK_ENABLE();
diff --git a/ports/stm32/mboot/main.c b/ports/stm32/mboot/main.c
index 99187e3ef..872d778cd 100644
--- a/ports/stm32/mboot/main.c
+++ b/ports/stm32/mboot/main.c
@@ -261,7 +261,11 @@ void SystemClock_Config(void) {
     RCC->PLLCFGR = RCC_PLLCFGR_DIVP1EN | RCC_PLLCFGR_DIVQ1EN;
 
     // Select PLL1-Q for USB clock source
+    #if defined(STM32H7A3xx)
+    RCC->CDCCIP2R |= 1 << RCC_CDCCIP2R_USBSEL_Pos;
+    #else
     RCC->D2CCIP2R |= 1 << RCC_D2CCIP2R_USBSEL_Pos;
+    #endif
 
     // Enable PLL1
     __HAL_RCC_PLL_ENABLE();
@@ -274,10 +278,17 @@ void SystemClock_Config(void) {
     }
 
     // Configure AHB divider
+    #if defined(STM32H7A3xx)
+    RCC->CDCFGR1 =
+        0 << RCC_CDCFGR1_CDCPRE_Pos // SYSCLK prescaler of 1
+        | 8 << RCC_CDCFGR1_HPRE_Pos // AHB prescaler of 2
+        ;
+    #else
     RCC->D1CFGR =
         0 << RCC_D1CFGR_D1CPRE_Pos // SYSCLK prescaler of 1
         | 8 << RCC_D1CFGR_HPRE_Pos // AHB prescaler of 2
         ;
+    #endif
 
     // Configure SYSCLK source from PLL
     __HAL_RCC_SYSCLK_CONFIG(RCC_SYSCLKSOURCE_PLLCLK);
@@ -290,6 +301,18 @@ void SystemClock_Config(void) {
     }
 
     // Set APB clock dividers
+    #if defined(STM32H7A3xx)
+    RCC->CDCFGR1 |=
+        4 << RCC_CDCFGR1_CDPPRE_Pos // APB3 prescaler of 2
+        ;
+    RCC->CDCFGR2 =
+        4 << RCC_CDCFGR2_CDPPRE2_Pos // APB2 prescaler of 2
+        | 4 << RCC_CDCFGR2_CDPPRE1_Pos // APB1 prescaler of 2
+        ;
+    RCC->SRDCFGR =
+        4 << RCC_SRDCFGR_SRDPPRE_Pos // APB4 prescaler of 2
+        ;
+    #else
     RCC->D1CFGR |=
         4 << RCC_D1CFGR_D1PPRE_Pos // APB3 prescaler of 2
         ;
@@ -300,6 +323,7 @@ void SystemClock_Config(void) {
     RCC->D3CFGR =
         4 << RCC_D3CFGR_D3PPRE_Pos // APB4 prescaler of 2
         ;
+    #endif
 
     // Update clock value and reconfigure systick now that the frequency changed
     SystemCoreClock = CORE_PLL_FREQ;
@@ -462,6 +486,8 @@ static int usrbtn_state(void) {
 #define FLASH_LAYOUT_STR "@Internal Flash  /0x08000000/04*032Kg,01*128Kg,07*256Kg" MBOOT_SPIFLASH_LAYOUT MBOOT_SPIFLASH2_LAYOUT
 #elif defined(STM32H743xx)
 #define FLASH_LAYOUT_STR "@Internal Flash  /0x08000000/16*128Kg" MBOOT_SPIFLASH_LAYOUT MBOOT_SPIFLASH2_LAYOUT
+#elif defined(STM32H7A3xx)
+#define FLASH_LAYOUT_STR "@Internal Flash  /0x08000000/256*08Kg" MBOOT_SPIFLASH_LAYOUT MBOOT_SPIFLASH2_LAYOUT
 #elif defined(STM32WB)
 #define FLASH_LAYOUT_STR "@Internal Flash  /0x08000000/256*04Kg" MBOOT_SPIFLASH_LAYOUT MBOOT_SPIFLASH2_LAYOUT
 #endif
@@ -1298,11 +1324,18 @@ void stm32_main(int initial_r0) {
     }
 
     // Reset the kernel clock configuration registers for all domains.
+    #if defined(STM32H7A3xx)
+    RCC->CDCCIPR = 0x00000000;
+    RCC->CDCCIP1R = 0x00000000;
+    RCC->CDCCIP2R = 0x00000000;
+    RCC->CDCCIPR = 0x00000000;
+    #else
     RCC->D1CCIPR = 0x00000000;
     RCC->D2CCIP1R = 0x00000000;
     RCC->D2CCIP2R = 0x00000000;
     RCC->D3CCIPR = 0x00000000;
     #endif
+    #endif
 
     // Make sure IRQ vector table points to flash where this bootloader lives.
     SCB->VTOR = FLASH_BASE;
diff --git a/ports/stm32/mpconfigboard_common.h b/ports/stm32/mpconfigboard_common.h
index a73a26b16..c313eb931 100644
--- a/ports/stm32/mpconfigboard_common.h
+++ b/ports/stm32/mpconfigboard_common.h
@@ -180,6 +180,15 @@
 #define MICROPY_HW_MAX_TIMER (17)
 #define MICROPY_HW_MAX_UART (8)
 
+// Configuration for STM32H7A3 series XXX
+#elif defined(STM32H7A3xx)
+
+#define MP_HAL_UNIQUE_ID_ADDRESS (UID_BASE)
+#define PYB_EXTI_NUM_VECTORS (24)
+#define MICROPY_HW_MAX_I2C (4)
+#define MICROPY_HW_MAX_TIMER (17)
+#define MICROPY_HW_MAX_UART (10)
+
 // Configuration for STM32H7 series
 #elif defined(STM32H7)
 
diff --git a/ports/stm32/powerctrl.c b/ports/stm32/powerctrl.c
index 946185fba..e7346f373 100644
--- a/ports/stm32/powerctrl.c
+++ b/ports/stm32/powerctrl.c
@@ -30,7 +30,8 @@
 #include "rtc.h"
 #include "genhdr/pllfreqtable.h"
 
-#if defined(STM32H7)
+#if defined(STM32H7A3)
+#elif defined(STM32H7)
 #define RCC_SR          RSR
 #define RCC_SR_SFTRSTF  RCC_RSR_SFTRSTF
 #define RCC_SR_RMVF     RCC_RSR_RMVF
@@ -614,6 +615,9 @@ void powerctrl_enter_standby_mode(void) {
     #if defined(STM32F0) || defined(STM32L0)
     #define CR_BITS (RTC_CR_ALRAIE | RTC_CR_WUTIE | RTC_CR_TSIE)
     #define ISR_BITS (RTC_ISR_ALRAF | RTC_ISR_WUTF | RTC_ISR_TSF)
+    #elif defined(STM32H7A3xx)
+    #define CR_BITS (RTC_CR_ALRAIE | RTC_CR_ALRBIE | RTC_CR_WUTIE | RTC_CR_TSIE)
+    #define SR_BITS (RTC_SR_ALRAF | RTC_SR_ALRBF | RTC_SR_WUTF | RTC_SR_TSF)
     #else
     #define CR_BITS (RTC_CR_ALRAIE | RTC_CR_ALRBIE | RTC_CR_WUTIE | RTC_CR_TSIE)
     #define ISR_BITS (RTC_ISR_ALRAF | RTC_ISR_ALRBF | RTC_ISR_WUTF | RTC_ISR_TSF)
@@ -626,7 +630,11 @@ void powerctrl_enter_standby_mode(void) {
     RTC->CR &= ~CR_BITS;
 
     // clear RTC wake-up flags
+    #if defined(STM32H7A3xx)
+    RTC->SR &= ~SR_BITS;
+    #else
     RTC->ISR &= ~ISR_BITS;
+    #endif
 
     #if defined(STM32F7)
     // disable wake-up flags
diff --git a/ports/stm32/rtc.c b/ports/stm32/rtc.c
index bd898d455..830b6dc55 100644
--- a/ports/stm32/rtc.c
+++ b/ports/stm32/rtc.c
@@ -339,9 +339,14 @@ STATIC HAL_StatusTypeDef PYB_RTC_Init(RTC_HandleTypeDef *hrtc) {
         hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16);
 
         // Exit Initialization mode
+        #if defined(STM32H7A3xx)
+        hrtc->Instance->ICSR &= (uint32_t) ~RTC_ICSR_INIT;
+        #else
         hrtc->Instance->ISR &= (uint32_t) ~RTC_ISR_INIT;
+        #endif
 
-        #if defined(STM32L0) || defined(STM32L4) || defined(STM32H7) || defined(STM32WB)
+        #if defined(STM32H7A3xx)
+        #elif defined(STM32L0) || defined(STM32L4) || defined(STM32H7) || defined(STM32WB)
         hrtc->Instance->OR &= (uint32_t) ~RTC_OR_ALARMOUTTYPE;
         hrtc->Instance->OR |= (uint32_t)(hrtc->Init.OutPutType);
         #elif defined(STM32F7)
@@ -693,8 +698,13 @@ mp_obj_t pyb_rtc_wakeup(size_t n_args, const mp_obj_t *args) {
     RTC->CR &= ~RTC_CR_WUTE;
 
     // wait until WUTWF is set
+    #if defined(STM32H7A3xx)
+    while (!(RTC->ICSR & RTC_ICSR_WUTWF)) {
+    }
+    #else
     while (!(RTC->ISR & RTC_ISR_WUTWF)) {
     }
+    #endif
 
     if (enable) {
         // program WUT
@@ -721,7 +731,11 @@ mp_obj_t pyb_rtc_wakeup(size_t n_args, const mp_obj_t *args) {
         #endif
 
         // clear interrupt flags
+        #if defined(STM32H7A3xx)
+        RTC->SR &= ~RTC_SR_WUTF;
+        #else
         RTC->ISR &= ~RTC_ISR_WUTF;
+        #endif
         #if defined(STM32L4) || defined(STM32WB)
         EXTI->PR1 = 1 << EXTI_RTC_WAKEUP;
         #elif defined(STM32H7)
diff --git a/ports/stm32/stm32_it.c b/ports/stm32/stm32_it.c
index 8e96da177..7f7758825 100644
--- a/ports/stm32/stm32_it.c
+++ b/ports/stm32/stm32_it.c
@@ -527,7 +527,11 @@ void TAMP_STAMP_IRQHandler(void) {
 
 void RTC_WKUP_IRQHandler(void) {
     IRQ_ENTER(RTC_WKUP_IRQn);
+    # if defined(STM32H7A3xx)
+    RTC->SR &= ~RTC_SR_WUTF; // clear wakeup interrupt flag
+    #else
     RTC->ISR &= ~RTC_ISR_WUTF; // clear wakeup interrupt flag
+    #endif
     Handle_EXTI_Irq(EXTI_RTC_WAKEUP); // clear EXTI flag and execute optional callback
     IRQ_EXIT(RTC_WKUP_IRQn);
 }
diff --git a/ports/stm32/system_stm32.c b/ports/stm32/system_stm32.c
index 00b721386..702df3218 100644
--- a/ports/stm32/system_stm32.c
+++ b/ports/stm32/system_stm32.c
@@ -195,7 +195,9 @@ void SystemClock_Config(void) {
     __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
     #endif
 
-    #if defined(STM32H7)
+    #if defined(STM32H7A3xx)
+    while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
+    #elif defined(STM32H7)
     // Wait for PWR_FLAG_VOSRDY
     while ((PWR->D3CR & (PWR_D3CR_VOSRDY)) != PWR_D3CR_VOSRDY) {
     }
diff --git a/ports/stm32/timer.c b/ports/stm32/timer.c
index 9b8c14c0d..4bd53cf92 100644
--- a/ports/stm32/timer.c
+++ b/ports/stm32/timer.c
@@ -239,6 +239,9 @@ uint32_t timer_get_source_freq(uint32_t tim_id) {
         #if defined(STM32F0)
         source = HAL_RCC_GetPCLK1Freq();
         clk_div = RCC->CFGR & RCC_CFGR_PPRE;
+        #elif defined(STM32H7A3xx)
+        source = HAL_RCC_GetPCLK2Freq();
+        clk_div = RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2;
         #elif defined(STM32H7)
         source = HAL_RCC_GetPCLK2Freq();
         clk_div = RCC->D2CFGR & RCC_D2CFGR_D2PPRE2;
@@ -251,6 +254,8 @@ uint32_t timer_get_source_freq(uint32_t tim_id) {
         source = HAL_RCC_GetPCLK1Freq();
         #if defined(STM32F0)
         clk_div = RCC->CFGR & RCC_CFGR_PPRE;
+        #elif defined(STM32H7A3xx)
+        clk_div = RCC->CDCFGR1 & RCC_CDCFGR2_CDPPRE1;
         #elif defined(STM32H7)
         clk_div = RCC->D2CFGR & RCC_D2CFGR_D2PPRE1;
         #else
diff --git a/ports/stm32/uart.c b/ports/stm32/uart.c
index b14a18c6d..b57645057 100644
--- a/ports/stm32/uart.c
+++ b/ports/stm32/uart.c
@@ -627,6 +627,33 @@ uint32_t uart_get_baudrate(pyb_uart_obj_t *self) {
             uart_clk = LSE_VALUE;
             break;
     }
+    #elif defined(STM32H7A3xx)
+    uint32_t csel;
+    if (self->uart_id == 1 || self->uart_id == 6 || self->uart_id == 9  || self->uart_id == 10) {
+        csel = RCC->CDCCIP2R >> 3;
+    } else {
+        csel = RCC->CDCCIP2R;
+    }
+    switch (csel & 3) {
+        case 0:
+            if (self->uart_id == 1 || self->uart_id == 6 || self->uart_id == 9  || self->uart_id == 10) {
+                uart_clk = HAL_RCC_GetPCLK2Freq();
+            } else {
+                uart_clk = HAL_RCC_GetPCLK1Freq();
+            }
+            break;
+        case 3:
+            uart_clk = HSI_VALUE;
+            break;
+        case 4:
+            uart_clk = CSI_VALUE;
+            break;
+        case 5:
+            uart_clk = LSE_VALUE;
+            break;
+        default:
+            break;
+    }
     #elif defined(STM32H7)
     uint32_t csel;
     if (self->uart_id == 1 || self->uart_id == 6) {
diff --git a/ports/stm32/usbd_conf.c b/ports/stm32/usbd_conf.c
index d24881d20..bd8eecf59 100644
--- a/ports/stm32/usbd_conf.c
+++ b/ports/stm32/usbd_conf.c
@@ -59,6 +59,7 @@ PCD_HandleTypeDef pcd_hs_handle;
   * @retval None
   */
 void HAL_PCD_MspInit(PCD_HandleTypeDef *hpcd) {
+    #if defined(USB_OTG_FS)
     if (hpcd->Instance == USB_OTG_FS) {
         #if defined(STM32H7)
         const uint32_t otg_alt = GPIO_AF10_OTG1_FS;
@@ -127,10 +128,16 @@ void HAL_PCD_MspInit(PCD_HandleTypeDef *hpcd) {
         #endif
     }
     #if MICROPY_HW_USB_HS
-    else if (hpcd->Instance == USB_OTG_HS) {
+    else
+    #endif
+    #endif
+    #if MICROPY_HW_USB_HS
+    if (hpcd->Instance == USB_OTG_HS) {
         #if MICROPY_HW_USB_HS_IN_FS
 
-        #if defined(STM32H7)
+        #if defined(STM32H7A3xx)
+        const uint32_t otg_alt = GPIO_AF10_OTG1_FS;
+        #elif defined(STM32H7)
         const uint32_t otg_alt = GPIO_AF12_OTG2_FS;
         #else
         const uint32_t otg_alt = GPIO_AF12_OTG_HS_FS;
@@ -204,13 +211,18 @@ void HAL_PCD_MspDeInit(PCD_HandleTypeDef *hpcd) {
     __HAL_RCC_USB_CLK_DISABLE();
     #else
 
+    #if defined(USB_OTG_FS)
     if (hpcd->Instance == USB_OTG_FS) {
         /* Disable USB FS Clocks */
         __USB_OTG_FS_CLK_DISABLE();
         __SYSCFG_CLK_DISABLE();
     }
     #if MICROPY_HW_USB_HS
-    else if (hpcd->Instance == USB_OTG_HS) {
+    else
+    #endif
+    #endif
+    #if MICROPY_HW_USB_HS
+    if (hpcd->Instance == USB_OTG_HS) {
         /* Disable USB FS Clocks */
         __USB_OTG_HS_CLK_DISABLE();
         __SYSCFG_CLK_DISABLE();
